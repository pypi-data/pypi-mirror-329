[tool.poetry]
name = "surf-archiver"
version = "0.1.2"
description = ""
authors = ["Isaac Williams <i.williams@amolf.nl>"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.9"
aio-pika = "^9.4.1"
pydantic = "^2.7.1"
pydantic-settings = {extras = ["yaml"], version = "^2.2.1"}
s3fs = "^2024.3.1"
typer = "^0.12.3"


[tool.poetry.group.remote.dependencies]
arq = "^0.26.1"
asyncssh = "^2.17.0"
sentry-sdk = "^2.16.0"


[tool.poetry.group.dev.dependencies]
boto3 = "^1.34"
boto3-stubs = {extras = ["s3"], version = "^1.35.39"}
mypy = "^1.9.0"
pika = "^1.3.2"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pyyaml = "^6.0.2"
ruff = "^0.4.8"
testcontainers = {extras = ["localstack", "rabbitmq"], version = "^4.8.2"}
types-pyyaml = "^6.0.12.20240917"


[tool.poetry.scripts]
surf-archiver-cli = 'surf_archiver.cli:app'


[tool.mypy]
plugins = "pydantic.mypy"


[[tool.mypy.overrides]]
module = [
    "pika.*",
    "s3fs.*",
    "testcontainers.*"
]
ignore_missing_imports = true


[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]


[tool.pytest.ini_options]
asyncio_mode = "auto"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
