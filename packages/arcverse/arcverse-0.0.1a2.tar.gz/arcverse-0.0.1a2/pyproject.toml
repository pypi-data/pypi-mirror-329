[tool.poetry]
name = "arcverse"
version = "0.0.1a2"
description = "arcverse is a library for creating synthesizing arc-agi like datasets with knobs to control different degrees of freedom."
homepage = "https://hayabhay.github.io/arcverse"
repository = "https://github.com/hayabhay/arcverse"
documentation = "https://hayabhay.github.io/arcverse"
authors = ["Abhay Kashyap"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
]
packages = [
    { include = "arcverse" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.urls]
Changelog = "https://github.com/hayabhay/arcverse/releases"

[tool.poetry.dependencies]
python = ">=3.10.1,<=3.13.1"
click = "^8.1.8"
numpy = "^2.2.3"
pillow = "^11.1.0"
loguru = "^0.7.3"
scipy = "^1.15.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pip = "^25.0.1"
pre-commit = "^4.1.0"
ruff = "^0.9.6"
jupyter = "^1.1.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
tox = "^4.24.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.3"
mkdocstrings = "^0.28.0"
mkdocs-autorefs = "^1.3.1"
mkdocs-include-markdown-plugin = "^7.1.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==== ruff ====
[tool.ruff]
indent-width = 4
line-length = 119

[tool.ruff.format]
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]


# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
    "integration",
]

# ==== Coverage ====
[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["tests"]

# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
