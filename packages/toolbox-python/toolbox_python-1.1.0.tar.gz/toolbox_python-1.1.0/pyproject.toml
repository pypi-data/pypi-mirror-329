
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "toolbox-python"
version = "1.1.0"
description = "Helper files/functions/classes for generic Python processes"
readme = "README.md"
license = "MIT"
authors = [
    {name="Chris Mahoney", email="toolbox-python@data-science-extensions.com"},
]
maintainers = [
    {name="Chris Mahoney", email="toolbox-python@data-science-extensions.com"},
]
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: Utilities",
]
requires-python = ">3.9,<4.0"
dependencies = [
    "typeguard==4.*",
    "more-itertools==10.*",
]

[project.urls]
Homepage = "https://data-science-extensions.com/python-toolbox"
Documentation = "https://data-science-extensions.com/python-toolbox"
Repository = "https://github.com/data-science-extensions/toolbox-python"
Changelog = "https://github.com/data-science-extensions/toolbox-python/releases"
Issues = "https://github.com/data-science-extensions/toolbox-python/issues"

[tool.poetry]
packages = [
    { include = "toolbox_python", from = "src" },
]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "25.*"
blacken-docs = "1.*"
pre-commit = "4.*"
isort = "6.*"
codespell = "2.*"
pyupgrade = "3.*"
pylint = "3.*"
pycln = "2.*"
ipykernel = "6.*"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "1.*"
mkdocs-material = "9.*"
mkdocstrings = "0.*"
mkdocstrings-python = "1.*"
mkdocs-coverage = "1.*"
mkdocs-autorefs = "1.*"
livereload = "2.*"
mike = "2.*"
black = "25.*"
docstring-inheritance = "2.*"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
requests = "2.*"
pytest = "8.*"
pytest-clarity = "1.*"
pytest-cov = "6.*"
pytest-sugar = "1.*"
pytest-icdiff = "0.*"
pytest-xdist = "3.*"
mypy = "1.*"
parameterized = "0.*"

[tool.black]
color = true
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::typeguard.InstrumentationWarning",
    "ignore::DeprecationWarning",
]
addopts = [
    "--verbose",
    "--verbose",
    "--cov=src/toolbox_python",
    "--cov-report=term",
    "--cov-report=html:cov-report/html",
    "--cov-report=xml:cov-report/xml/cov-report.xml",
]
testpaths = [
    "src/tests",
]

[tool.mypy]
ignore_missing_imports = true
allow_redefinition = true
pretty = true
disable_error_code = [
    "valid-type",
    "attr-defined",
]

[tool.isort]
import_heading_future = "## Future Python Library Imports ----"
import_heading_stdlib = "## Python StdLib Imports ----"
import_heading_thirdparty = "## Python Third Party Imports ----"
import_heading_firstparty = "## Local First Party Imports ----"
import_heading_localfolder = "## Local Module Imports ----"
profile = "black"
split_on_trailing_comma = true
combine_as_imports = true
lines_after_imports = 2

[tool.codespell]
ignore-words-list = "demog"

[tool.pylint.main]
exit-zero = false
disable = [
    "C0103", # invalid-name
    "C0114", # missing-module-docstring
    "C0116", # missing-function-docstring
    "C0121", # singleton-comparison
    "C0201", # consider-iterating-dictionary
    "C0207", # use-maxsplit-arg
    "C0301", # line-too-long
    "C0302", # too-many-lines
    "C0411", # wrong-import-order
    "W0511", # fixme
    "W0602", # global-variable-not-assigned
    "W0603", # global-statement
    "W0612", # unused-variable
    "W0621", # redefined-outer-name
    "W0631", # undefined-loop-variable
    "W0718", # broad-exception-caught
    "W0719", # broad-exception-raised
    "W1309", # f-string-without-interpolation
    "R0914", # too-many-locals
    "R0915", # too-many-statements
    "R1705", # no-else-return
    "R1711", # useless-return
    "R1716", # chained-comparison
    "R1723", # no-else-break
    "R1735", # use-dict-literal
    "E0602", # undefined-variable
    "E0606", # possibly-used-before-assignment
    "E1136", # unsubscriptable-object
    "E1137", # unsupported-assignment-operation
]

[[tool.poetry_bumpversion.replacements]]
files = [
    "src/toolbox_python/__init__.py",
    "src/tests/test_version.py",
]
