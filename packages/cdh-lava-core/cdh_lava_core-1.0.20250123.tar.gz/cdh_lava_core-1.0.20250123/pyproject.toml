[project]
name = "cdh_lava_core"
version="1.0.20250117"
authors = [{name="John Bowyer", email="zfi4@cdc.gov" }]
description = "CDC Data Hub Lifecycle, Analysis and Visualization Accelerator (LAVA) makes building and deploying data products faster and more reliable through standardizing public health data processes and technology."
readme = "README.md"
requires-python = ">=3.10,<3.13"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10"
]

[project.urls]
"Homepage" = "https://www.pypi.org/project/cdh-lava-core"
"Documentation" = "https://gift.readthedocs.io"
"Repository" = "https://github.com/cdcent/cdh-lava-core"

[tool.poetry]
name="cdh_lava_core"
version="1.0.20250123"
authors = ["John Bowyer"]
description = "CDC Data Hub Lifecycle, Analysis and Visualization Accelerator (LAVA) makes building and deploying data products faster and more reliable through standardizing public health data processes and technology."
homepage="https://pypi.org/project/cdh-lava-core"
repository="https://github.com/cdcent/cdh-lava-core"
classifiers=[
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10"
]

include = [ "README.md",
            "LICENSE.md",
            "setup.cfg",
            "setup.py",
            "app.py",
            "app_startup.py",
            "pyproject.toml",
            "cdh_lava_core/**/*",
             "run_install_cdh_lava_core.py"
]
packages = [{include = "cdh_lava_core"}]


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pytest = "^7.4.0"
adal = "^1.2.7"
azure-common = "^1.1.28"
azure-keyvault-secrets = "^4.5.0"
azure-storage-file-datalake = "^12.8.0"
numpy = "^1.23.0"
botocore = "1.24.18"
boto3 = "1.21.18"
setuptools = ">=69,<71"
requests = "^2.32.0"
myst-parser = "^0.18.0"
sphinx-markdown-tables = "^0.0.17"
Sphinx = "^5.2.1"
sphinx-markdown-builder = "^0.5.5"
pathlib = "^1.0.1"

pyreadstat = "^1.1.9"
sphinx-sitemap = "^2.2.0"
python-dateutil = "^2.8.2"
pygments = "^2.13.0"
markdown = "^3.4.1"
testresources = "^2.0.1"
sphinx-autoapi = "^2.0.0"
sphinx-sql = "^1.3.2"
docutils = "0.17.1"
sphinx-autodoc-typehints = "^1.19.5"
rsconnect-jupyter = "^1.6.0"
sphinx-rtd-theme = "^1.1.1"
chardet = "^5.0.0"
nbconvert = "^6.5.1"
pip-system-certs = "^4.0"
style = "^1.1.6"
azure-keyvault = "^4.2.0"
azure-mgmt-monitor = "^5.0.1"
jinja2 = "^3.1.2"
opentelemetry-sdk = "^1.27.0"
opentelemetry-instrumentation-flask = "^0.48b0"  # Update this version
opentelemetry-instrumentation = "^0.48b0"        # Ensure this is consistent with Flask version
azure-monitor-opentelemetry-exporter = "^1.0.0b31"
azure-storage-queue = "^12.6.0"
python-dotenv = "^1.0.0"
azure-mgmt-resource = "^23.0.1"
tryceratops = "^2.3.2"
certifi = "^2024.2.1"
jsondiff = "^2.0.0"
wrapt = "^1.15.0"
retrying = "^1.3.4"
azure-identity = "^1.13.0"
rsconnect = "^0.1.3"
rsconnect-python = "^1.17.1"
six = "^1.16.0"
openpyxl = "^3.1.2"
oauthlib = "^3.2.2"
xlsxwriter = "^3.1.2"
werkzeug = ">=2.3.3,<4.0.0"
flask-restful = "^0.3.10"
flask-restx = "^1.1.0"
flask-jwt-extended = "^4.5.2"
flask = "^2.3.2"
jwcrypto = "^1.5.1"
flask-cors = ">=4,<6"
office365-rest-python-client = "^2.4.3"
grpcio = ">=1.48.1"
databricks-connect= "14.3.2"
sphinxcontrib-mermaid = "^0.9.2"
python-pptx = "^0.6.23"
ipywidgets = "^8.1.1"
jupyterlab = "^4.1.2"
databricks-sdk = "^0.29.0"
azure-storage-file-share = "^12.15.0"
adlfs = "^2024.4.1"
fsspec = "^2024.5.0"
esda = "^2.5.1"
geopandas = "^1.0.0"
geojson = "^3.1.0"
topojson = "^1.9"
shapely = "^2.0.4"
ydata-profiling = "^4.8.3"
azure-ai-textanalytics = "^5.3.0"
openai = "^1.37.1"
folium = "^0.17.0"
plotly = "^5.24.1"
flask-wtf = "^1.2.1"
great-expectations = {extras = ["databricks"], version = "^1.2.0"}
jupytext = "^1.16.4"
sqlalchemy = "^2.0.36"
databricks-sql-connector = "^3.6.0"
yt-dlp = "^2024.11.18"
selenium = "^4.27.1"
webvtt-py = "^0.5.1"
nltk = "^3.9.1"

[tool.poetry.group.unix.dependencies]
xattr = {version = "^0.10.1", markers = "sys_platform != 'win32'"}

[tool.poetry.group.windows.dependencies]
pandas = { version = "^2.0.2", markers = "sys_platform == 'win32'" }

[tool.poetry.group.dev.dependencies]
wheel = "^0.38.1"
flake8 = "^7.0.0"
flake8-bugbear = "^22.6.22"
black = "^24.1.0"
commitizen = "^2.28.0"
python-decouple = "^3.6"
pathlib = "^1.0.1"
pylint = "^3.0.0"
autopep8 = "^2.0.1"

[tool.poetry.scripts]
flaskapp = "cdh_lava_core.app:app"
generatechangelog = "cdh_lava_core.change_log_service.change_log_generator:main"
# installdependencies = "npm ci"
# generaterelease = "npx semantic-release"

[tool.pytest.ini_options]
minversion="7.4"
testpaths = [
    "tests",
]
python_functions = [
    "test_*",
]

[tool.semantic_release]
version_variable = [ "pyproject.toml:version"]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]

branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"

[tool.mypy]
warn_unused_configs=true
namespace_packages=true
explicit_package_bases=true
ignore_missing_imports=true
exclude='tests'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
