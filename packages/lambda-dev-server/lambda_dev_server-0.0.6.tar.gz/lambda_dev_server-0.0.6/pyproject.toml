[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "lambda-dev-server"
dynamic = ["version"]
description = 'A simple development server for AWS Lambda functions'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ['aws', 'lambda', 'server', 'development']
authors = [
  { name = "Flavio Amurrio", email = "25621374+FlavioAmurrioCS@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "typing-extensions",
  "uvicorn",
]

[project.urls]
Documentation = "https://github.com/FlavioAmurrioCS/lambda-dev-server#readme"
Issues = "https://github.com/FlavioAmurrioCS/lambda-dev-server/issues"
Source = "https://github.com/FlavioAmurrioCS/lambda-dev-server"

[project.scripts]
lambda-dev-server = "lambda_dev_server.__main__:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/lambda_dev_server/_version.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/lambda_dev_server tests}"

[tool.coverage.run]
source_pkgs = ["lambda_dev_server", "tests"]
branch = true
parallel = true
omit = [
  "src/lambda_dev_server/__about__.py",
]

[tool.coverage.paths]
lambda_dev_server = ["src/lambda_dev_server", "*/lambda-dev-server/src/lambda_dev_server"]
tests = ["tests", "*/lambda-dev-server/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

# COMMON SETTINGS BELOW
[tool.hatch.envs.hatch-static-analysis]
config-path = "none"

[tool.pyright]
pythonVersion = "3.8"

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true


[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
  "ALL",
]
ignore = [
  "COM812", # missing-trailing-comma
  "D100",   # undocumented-public-module
  "D101",   # undocumented-public-class
  "D102",   # undocumented-public-method
  "D103",   # undocumented-public-function
  "D104",   # undocumented-public-package
  "D105",   # undocumented-magic-method
  "D107",   # undocumented-public-init
  "ERA001", # commented-out-code
  "I",      # isort # DO NOT ENABLE https://github.com/astral-sh/ruff/issues/4670
  "ISC001", # single-line-implicit-string-concatenation
  "PGH003", # blanket-type-ignore
  "PTH",    # flake8-use-pathlib # DO NOT ENABLE, we prefere non pathlib
  "T20",    # flake8-print # DO NOT ENABLE, we use prints
  "D203",   # one-blank-line-before-class
  "D212",   # multi-line-summary-first-line
  "D401",   # non-imperative-mood
  "D417",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100

# https://github.com/astral-sh/ruff/issues/4368
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "S101",    # assert
  "E501",    # line-too-long
  "INP001",  # implicit-namespace-package
  "PLR2004",
]
