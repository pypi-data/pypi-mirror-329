[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-behavior-services"
description = "A library that defines AIND data schema and validates JSON files for behavior rig models."
authors = [
    { name = "Bruno Cruz", email = "bruno.cruz@alleninstitute.org" },
]
license = {text = "MIT"}
requires-python = ">=3.11"
dynamic = ["version", "readme"]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
]
dependencies = [
    'pydantic>=2.7, <3.0',
    'harp-python>=0.2',
    'aind-behavior-curriculum < 0.2',
    'gitpython>=3.1, <4.0',
    'scikit-learn',
    'semver',
]

[project.urls]
Documentation = "https://allenneuraldynamics.github.io/Aind.Behavior.Services/"
Repository = "https://github.com/AllenNeuralDynamics/Aind.Behavior.Services/"
Issues = "https://github.com/AllenNeuralDynamics/Aind.Behavior.Services/issues"
Changelog = "https://github.com/AllenNeuralDynamics/Aind.Behavior.Services/releases"

[project.optional-dependencies]

dev = [
    'ruff',
    'codespell',
    'aind-behavior-services[generators]'
]

generators = [
    'jinja2',
    'requests',
    'pyyaml'
    ]

docs = [
    'Sphinx<7.3',
    'furo',
    'sphinx-jinja',
    'autodoc_pydantic[erdantic]',
    'sphinx-jsonschema',
    'sphinx-copybutton',
    "sphinx_mdinclude",

]

[project.scripts]
regenerate = "aind_behavior_services.scripts.regenerate:main"
generate-python = "_generators:main"

[tool.setuptools]
 # FIXME: temporary workaround:
 #   - https://github.com/astral-sh/uv/issues/9513
 #   - https://github.com/pypa/setuptools/issues/4759
 license-files = []

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
aind_behavior_services = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "aind_behavior_services.__version__"}
readme = {file = "README.md", content-type = "text/markdown"}

[tool.ruff]
line-length = 120
target-version = 'py311'

[tool.ruff.lint]
extend-select = ['Q', 'RUF100', 'C90', 'I']
extend-ignore = []
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'google' }

[tool.codespell]
skip = '.git,*.pdf,*.svg,./bonsai,*.bonsai,./docs/_build,uv.lock'
ignore-words-list = 'nd, assertIn'