name: Publish tensorkube to Test PyPI

on:
  push:
    branches : [ main ]

jobs:
  build:
    name: Build distribution 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Build source and wheel distributions
      run: |
        python -m pip install --upgrade build
        python -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/tensorkube

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true
  update-docs:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install package and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Generate documentation
        run: |
          cd doc_generator
          python doc_gen.py

      - name: Checkout docs repository
        uses: actions/checkout@v4
        with:
          repository: samagra14/docs
          token: ${{ secrets.DOCS_REPO_TOKEN }}
          path: docs-repo
          fetch-depth: 0

      - name: Update documentation and mint.json
        id: update-docs
        run: |
          cd docs-repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git checkout -b update-tensorkube-docs-${{ github.sha }}
          
          # Verify jq is available
          jq --version
          
          # Create CLI reference directory if it doesn't exist
          mkdir -p reference/cli_reference
          
          # Remove existing CLI reference files
          rm -rf reference/cli_reference/*
          
          # Check if files exist and copy them
          if [ -d "../doc_generator/docs/commands" ] && [ "$(ls -A ../doc_generator/docs/commands)" ]; then
            cp -r ../doc_generator/docs/commands/tensorkube_* reference/cli_reference/
          
            # Update mint.json CLI Reference section
            CLI_FILES=$(ls reference/cli_reference/*.mdx | sed 's|docs/||g' | sed 's|.mdx$||g' | sort | jq -R . | jq -s .)
            jq --argjson files "$CLI_FILES" '(.navigation[] | select(.group == "CLI Reference")).pages = $files' mint.json > mint.json.tmp
            mv mint.json.tmp mint.json
          
            # Only commit if there are changes
            if git status --porcelain | grep .; then
              git add reference/cli_reference/ mint.json
              git commit -m "Update Tensorkube documentation
          
              Automated documentation update from tensorkube repository.
              Source commit: ${{ github.sha }}"
              git push origin update-tensorkube-docs-${{ github.sha }}
              echo "changes_made=true" >> $GITHUB_OUTPUT
            else
              echo "No changes to commit"
              echo "changes_made=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No documentation files generated"
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.update-docs.outputs.changes_made == 'true'
        env:
          GH_TOKEN: ${{ secrets.DOCS_REPO_TOKEN }}
        run: |
          gh pr create \
            --repo samagra14/docs \
            --base main \
            --head update-tensorkube-docs-${{ github.sha }} \
            --title "docs: Update Tensorkube CLI documentation - ${{github.sha}}" \
            --body "Automated documentation update from tensorkube repository.
          
            Source commit: ${{ github.sha }}"

