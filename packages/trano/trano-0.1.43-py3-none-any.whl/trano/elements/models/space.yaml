"components":
- "classes":
  - |-
    Space
  "figures":
    - "left_axis":
        "label": |-
          Zone air temperature [K]
        "lines":
          - "color": |-
              blue
            "label": |-
              Air temperature [K]
            "template": |-
              {{ element.name }}.TSensor
          - "color": |-
              black
            "label": |-
              Measured Air temperature [K]
            "line_width": !!float |-
              2.0
            "template": |-
              data_bus.dataBus.T{{ element.name | capitalize}}
      "right_axis":
        "label": |-
          Occupancy schedule [-]
        "lines":
          - "label": |-
              Occupied zone [-]
            "line_style": |-
              dashed
            "template": |-
              {{ element.occupancy.name }}.occSch2.occupied
    - "left_axis":
        "label": |-
          Heat flow rate [W]
        "lines":
          - "color": |-
              red
            "label": |-
              Radiative heat flow rate [W]
            "template": |-
              {{ element.name }}.heaPorRad.Q_flow
          - "color": |-
              blue
            "label": |-
              Convective heat flow rate [W]
            "template": |-
              {{ element.name }}.heaPorAir.Q_flow
          - "color": |-
              yellow
            "label": |-
              Latent heat gain [W]
            "template": |-
              {{ element.name }}.air.QLat_flow
          - "label": |-
              Convective heat gain [W]
            "template": |-
              {{ element.name }}.air.QCon_flow
    - "left_axis":
        "label": |-
          Control signal [-]
        "lines":
          - "label": |-
              Control signal [-]
            "line_style": |-
              dashed
            "template": |-
              {{ element.emissions[0].control.name  }}.y
      "right_axis":
        "label": |-
          Zone controller input [K]
        "lines":
          - "color": |-
              blue
            "label": |-
              Zone controller setpoint [K]
            "template": |-
              {{ element.emissions[0].control.name }}.emissionControl.conHea.u_s
          - "color": |-
              red
            "label": |-
              Zone controller measured [K]
            "template": |-
              {{ element.emissions[0].control.name }}.emissionControl.conHea.u_m
  "library": |-
    ideas
  "parameter_processing":
    "function": |-
      modify_alias
    "parameter":
      "average_room_height": |-
        hZone
      "volume": |-
        V
  "ports":
  - "bus_connection": !!bool |-
      true
    "multi_connection": !!bool |-
      true
    "names":
    - |-
      propsBus
    "targets":
    - |-
      BaseWall
  - "names":
    - |-
      yOcc
    "targets":
    - |-
      BaseOccupancy
  - "names":
    - |-
      gainCon
    - |-
      gainRad
    "targets":
    - |-
      Emission
  - "multi_connection": !!bool |-
      true
    "names":
    - |-
      gainCon
    "targets":
    - |-
      VAVControl
    - |-
      DataBus
    "use_counter": !!bool |-
      false
  - "flow": |-
      inlet_or_outlet
    "multi_connection": !!bool |-
      true
    "names":
    - |-
      ports
    "targets":
    - |-
      Ventilation
    - |-
      Control
    - |-
      DataBus
  "template": |-
    IDEAS.Buildings.Components.Zone {{ element.name }}(
        mSenFac=0.822,
            {%- if element.number_ventilation_ports != 0 -%}
        nPorts = {{ element.number_ventilation_ports }},
        {%- endif %}
        {{ macros.render_parameters(parameters) | safe}},
        n50=0.822*0.5*{{ element.name }}.n50toAch,
        redeclare package Medium = Medium,
        nSurf={{ element.number_merged_external_boundaries }},
        T_start=293.15)
  "variant": |-
    default
- "classes":
  - |-
    Space
  "figures":
  - "left_axis":
      "label": |-
        Zone air temperature [K]
      "lines":
      - "color": |-
          blue
        "label": |-
          Air temperature [K]
        "template": |-
          {{ element.name }}.air.vol.T
      - "color": |-
          black
        "label": |-
          Measured Air temperature [K]
        "line_width": !!float |-
          2.0
        "template": |-
          data_bus.dataBus.T{{ element.name | capitalize}}
    "right_axis":
      "label": |-
        Occupancy schedule [-]
      "lines":
      - "label": |-
          Occupied zone [-]
        "line_style": |-
          dashed
        "template": |-
          {{ element.occupancy.name }}.occSch2.occupied
  - "left_axis":
      "label": |-
        Heat flow rate [W]
      "lines":
      - "color": |-
          red
        "label": |-
          Radiative heat flow rate [W]
        "template": |-
          {{ element.name }}.heaPorRad.Q_flow
      - "color": |-
          blue
        "label": |-
          Convective heat flow rate [W]
        "template": |-
          {{ element.name }}.heaPorAir.Q_flow
      - "color": |-
          yellow
        "label": |-
          Latent heat gain [W]
        "template": |-
          {{ element.name }}.air.QLat_flow
      - "label": |-
          Convective heat gain [W]
        "template": |-
          {{ element.name }}.air.QCon_flow
  - "left_axis":
      "label": |-
        Control signal [-]
      "lines":
      - "label": |-
          Control signal [-]
        "line_style": |-
          dashed
        "template": |-
          {{ element.emissions[0].control.name  }}.y
    "right_axis":
      "label": |-
        Zone controller input [K]
      "lines":
      - "color": |-
          blue
        "label": |-
          Zone controller setpoint [K]
        "template": |-
          {{ element.emissions[0].control.name }}.emissionControl.conHea.u_s
      - "color": |-
          red
        "label": |-
          Zone controller measured [K]
        "template": |-
          {{ element.emissions[0].control.name }}.emissionControl.conHea.u_m
  "library": |-
    buildings
  "parameter_processing":
    "function": |-
      exclude_parameters
    "parameter":
    - |-
      volume
  "ports":
  - "multi_connection": !!bool |-
      true
    "names":
    - |-
      surf_surBou
    "targets":
    - |-
      BaseInternalElement
  - "names":
    - |-
      qGai_flow
    "targets":
    - |-
      BaseOccupancy
  - "names":
    - |-
      weaBus
    "targets":
    - |-
      BaseWeather
  - "names":
    - |-
      heaPorAir
    - |-
      heaPorRad
    "targets":
    - |-
      Emission
  - "names":
    - |-
      heaPorAir
    "targets":
    - |-
      DataBus
  - "names":
    - |-
      heaPorAir
    "targets":
    - |-
      VAVControl
  - "flow": |-
      inlet_or_outlet
    "multi_connection": !!bool |-
      true
    "names":
    - |-
      ports
    "targets":
    - |-
      Ventilation
    - |-
      Control
    - |-
      DataBus
  "template": |-
    Buildings.ThermalZones.Detailed.MixedAir {{ element.name }}(
            redeclare package Medium = Medium,
            {{ macros.render_parameters(parameters) | safe}},
            {%- if element.number_ventilation_ports != 0 -%}
            nPorts = {{ element.number_ventilation_ports }},
            {%- endif %}
            {%- for boundary in element.boundaries -%}
                {%- if boundary.type == 'ExternalWall' -%}
                    {%- if boundary.number %}
                        nConExt={{ boundary.number }},
                        datConExt(
                        {{ macros.element_parameters(boundary) }},
                        azi={{ macros.join_list(boundary.azimuths) }}),
                    {% else %}
                        nConExt=0,
                    {%- endif %}
                {%- endif %}
                {%- if boundary.type == "InternalElement"-%}
                    {%- if boundary.number %}
                        nSurBou={{ boundary.number }},
                        surBou(
                        A={{ macros.join_list(boundary.surfaces) }},
                        til={{ macros.convert_tilts(boundary.tilts) }}),
                    {% else %}
                        nSurBou=0,
                    {%- endif %}
                {%- endif %}
                {%- if boundary.type == "WindowedWall" -%}
                    {%- if boundary.number %}
                        nConExtWin={{ boundary.number }},
                        datConExtWin(
                        {{ macros.element_parameters(boundary) }},
                        glaSys={{ macros.join_list(boundary.window_layers) }},
                        wWin={{ macros.join_list(boundary.window_width) }},
                        hWin={{ macros.join_list(boundary.window_height) }},
                        azi={{ macros.join_list(boundary.azimuths) }}),
                    {% else %}
                        nConExtWin=0,
                    {%- endif %}
                {%- endif %}
                {%- if boundary.type == "FloorOnGround" -%}
                    {%- if boundary.number %}
                        nConBou={{ boundary.number }},
                        datConBou(
                        {{ macros.element_parameters(boundary) }},
                        azi={{ macros.join_list(boundary.azimuths) }}),
                    {% else %}
                        nConBou=0,
                    {%- endif %}
                {%- endif %}
            {%- endfor %}
            nConPar=0,
            energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
  "variant": |-
    default
