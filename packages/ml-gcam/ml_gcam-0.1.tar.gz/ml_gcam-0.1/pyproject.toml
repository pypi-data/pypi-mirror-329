[project]
name = "ml_gcam"
version = "0.1"
description = ""
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "matt jensen" }]
license = { text = "Apache-2.0" }

dependencies = [
	"torch",
	"pytorch-cuda==12.1",
	"einops",
	"accelerate",
	"torchtyping",
	"scikit-learn",
	"seaborn",
	"tensorboard",
	"wandb",
	"polars>=0.20.19",
	"pandas",
	"pyarrow",
	"marimo",
	"gcamreader>=1.4.0",
	"pytest",
	"pytest-cov",
	"click",
	"rich",
	"tqdm",
	"python-dotenv",
	"python-configuration[toml]",
	"lxml",
	"geopandas>=0.9.0",
]

[project.optional-dependencies]
test = ["pytest"]

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m not slow')"]
# addopts = "--cov=ml_gcam --cov-report=term --no-cov-on-fail"
addopts = "-v --tb=short"
testpaths = ["tests"]

[tool.coverage.run]
omit = ["cli.py", "ml_gcam/notebooks/*"]

[tool.ruff]
line-length = 88
exclude = ["tests", "docs"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
ignore = ['D203', 'D212']
select = [
	'F',
	'E',
	'W',
	'I',
	'N',
	'D',
	'B',
	'A',
	'COM',
	'C4',
	'T20',
	'Q',
	'SIM',
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_subclassing_any = true
disallow_any_decorated = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
exclude = ['tests']

[[tool.mypy.overrides]]
module = [
	'google.auth.credentials',
	'yaml',
	'toml',
	'boto3',
	'botocore.exceptions',
	'hvac',
	'hvac.exceptions',
	'jsonschema',
	'jsonschema.exceptions',
]
ignore_missing_imports = true
