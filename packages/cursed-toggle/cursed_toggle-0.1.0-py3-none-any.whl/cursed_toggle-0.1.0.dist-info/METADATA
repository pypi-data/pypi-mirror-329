Metadata-Version: 2.3
Name: cursed-toggle
Version: 0.1.0
Summary: Implementation of a Boolean toggle function according to the KICS principle
License: GPL-3.0-only
Author: Kevin Golob
Author-email: 151143873+kvnglb@users.noreply.github.com
Requires-Python: >=3.9,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Typing :: Typed
Requires-Dist: flake8 (>=7.1.1,<8.0.0)
Requires-Dist: mypy (>=1.15.0,<2.0.0)
Requires-Dist: ruff (>=0.9.6,<0.10.0)
Project-URL: Homepage, https://github.com/kvnglb/cursed-toggle
Project-URL: Repository, https://github.com/kvnglb/cursed-toggle
Description-Content-Type: text/markdown

# cursed-toggle
This library is intended to implement a toggle function for Boolean values in a very bad or even the worst and most unmaintainable way, following the KICS (Keep it complicated, specialist) principle.

# Preamble
The variable `b` can be True (1) or False (0). One of the most basic implementation to get a toggle is
```
f(b) = not b
```
But this is way too simple and efficient and something cooler looking might be
```
f(b) = b^1
```
A trivial linear function is also possible
```
f(b) = 1 - b
```
and this sounds like a good start.

