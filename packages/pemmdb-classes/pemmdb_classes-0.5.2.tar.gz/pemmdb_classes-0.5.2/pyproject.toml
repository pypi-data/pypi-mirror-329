[tool.poetry]
name = "pemmdb-classes"
version = "0.5.2"
description = "PEMMDB classes to be used for downloading and manipulating PEMMDB data"
authors = ["Christophe Druet <christophe.druet@entsoe.eu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pydantic = "^2.10.6"
python-benedict = "^0.34.1"
pendulum = "^3.0.0"
ez-credentials = "^1.2.3"
loguru = "^0.7.3"
cryptography = "^44.0.0"
polars = "^1.21.0"
ijson = "^3.3.0"

[tool.poetry.group.dev.dependencies]
bumpver = "^2024.1130"
twine = "^6.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bumpver]
current_version = "0.5.2"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "bump version {old_version} -> {new_version}"
commit          = true
tag             = true
push            = false
exclude         = ["tests"]

[tool.bumpver.file_patterns]
    "pyproject.toml" = [
        'current_version = "{version}"',
        'version = "{version}"',
    ]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".j2",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# 1. Enable flake8-bugbear (`B`) rules, in addition to the defaults.
select = ["E4", "E7", "E9", "F", "B", "I"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
ignore = ["E501", "E402", "F401"]
unfixable = ["B"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
# Define import order style (optional, customize as needed)
known-first-party = ["pemmdb_utils"]  # Replace with your project's module name
default-section = "first-party"
length-sort-straight = true
lines-after-imports = 2

# # Configure the line legth for import sorting
# line_length = 88

# # Include other isort-compatible settings here if necessary
# combine_as_imports = true
# force_single_line = false


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

