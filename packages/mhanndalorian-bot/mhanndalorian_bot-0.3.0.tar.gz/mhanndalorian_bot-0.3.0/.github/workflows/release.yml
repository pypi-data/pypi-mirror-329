name: Python Package Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          pip install hatch

      # Run Pytest on the /test/ folder
      - name: Run Pytests
        run: |
          pytest tests/

      # Build the package using python3 -m build
      - name: Build the package
        run: |
          python3 -m pip install --upgrade setuptools wheel
          python3 -m build

      # Tag the release in GitHub
      - name: Tag the release
        run: |
          VERSION=$(hatch version)
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"

    # Publish the package to PyPI
  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi-release
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/project/mhanndalorian-bot/
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
