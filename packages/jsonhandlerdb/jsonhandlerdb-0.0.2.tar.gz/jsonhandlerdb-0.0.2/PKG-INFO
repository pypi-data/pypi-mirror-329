Metadata-Version: 2.2
Name: jsonhandlerdb
Version: 0.0.2
Summary: A small example package
Author-email: Keagan Landfried <keaganlandfried@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Keagan Landfried
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/Zennara/JsonHandler
Project-URL: Issues, https://github.com/Zennara/JsonHandler/issues
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# JsonHandler

This is a simple package that allows you to store nested Model objects in a JSON file. Completely asynchronous and allows the json file to be edited then rebooted. 

Example Usage:
```python
class People(CustomModel):
    name: Name
    age: int

class Name(CustomModel):
    first: str
    last: str
    
class Data(CustomModel):
    people: list[People]

json_handler = JsonHandler(Data, "data.json")

# prints the first name of the first person
if json_handler.data.people:
    print(json_handler.data.people[0].name.first)
else:
    # if there is no data, add some
    json_handler.data.people.append(People(name=Name(first="John", last="Doe"), age=30))
```
