//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "payment_details")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub transaction_id: i32,
    pub redirect_url: Option<String>,
    pub client_secret: Option<String>,
    #[sea_orm(column_type = "custom(\"LONGTEXT\")", nullable)]
    pub meta_data: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::payment_transactions::Entity",
        from = "Column::TransactionId",
        to = "super::payment_transactions::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    PaymentTransactions,
}

impl Related<super::payment_transactions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PaymentTransactions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
