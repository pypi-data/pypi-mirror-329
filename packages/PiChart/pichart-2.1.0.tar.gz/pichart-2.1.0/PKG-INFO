Metadata-Version: 2.2
Name: PiChart
Version: 2.1.0
Summary: Tiny Charts Dashboard UI for MicroPython
License: The MIT License (MIT)
        Copyright © 2022 <copyright holders>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Project-URL: Homepage, http://www.kevsrobots.com
Project-URL: GitHub, https://www.github.com/kevinmcaleer/pichart
Project-URL: YouTube, https://www.youtube.com/c/kevinmcaleer28
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: bumpver; extra == "dev"
Requires-Dist: pip-tools; extra == "dev"

# PiChart - Tiny Dashboard Charts for MicroPython

PiChart is a lightweight library for creating charts, cards, and image tiles on MicroPython displays, optimized for devices like the Raspberry Pi Pico with Pimoroni displays. Plot data as bars, lines, or points, display text cards, or show JPEG images in a customizable grid layout.

## Features
- Bar, line, and point chart types
- Text cards for simple info displays
- JPEG image tiles with borders
- Grid-based container for layout management
- Customizable colors, sizes, and display options

## Requirements
- MicroPython firmware (e.g., Pimoroni’s build with `jpegdec`)
- A compatible display (e.g., Pico Display Pack)
- Hardware: Raspberry Pi Pico or similar MicroPython device

## Installation
1. Copy `pichart.py` to your MicroPython device using a tool like Thonny or rshell.
2. Ensure your MicroPython firmware includes `jpegdec` (included in Pimoroni’s builds).

## Quick Start
```python
from pichart import Chart, Container
from picographics import PicoGraphics, DISPLAY_PICO_DISPLAY

# Set up display
display = PicoGraphics(display=DISPLAY_PICO_DISPLAY)

# Create a chart
chart = Chart(display, title="Temp", values=[20, 25, 22, 28])
chart.x = 10
chart.y = 10
chart.width = 220
chart.height = 120
chart.data_colour = {'red': 255, 'green': 0, 'blue': 0}  # Red bars

# Add to container and draw
container = Container(display)
container.add_chart(chart)
container.update()
```

# Documentation
See [docs/](docs/) for detailed guides:

- [User Guide](docs/user_guide.md): Full usage instructions
- [API Reference](docs/api_reference.md): Class and method details
- [Examples](docs/examples.md): More code samples

# License
MIT License - See LICENSE for details.

# Contributing
Contributions welcome! See [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines.
