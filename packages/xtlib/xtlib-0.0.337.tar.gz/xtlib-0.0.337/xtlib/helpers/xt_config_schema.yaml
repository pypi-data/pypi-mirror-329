# xt_config_schema.yaml: yaml file that describes legal entries for DEFAULT and LOCAL XT config files.

# predefined keys: $record-types, $repeat, $opt, $select, $select-key, $select-records
# predefined values: $str, $bool, $int, $num, $str-list, $rec

$reference-types:
    # defines a reference a child of the specified section 
    ref-store: stores
    ref-external: external-services
    ref-target: compute-targets
    ref-batch-image: azure-batch-images
    ref-prefix: script-launch-prefix
    ref-setup: setups
    ref-provider: providers 
    ref-docker: dockers

$record-types:
    rec_batch: {type: "batch", url: $str, $opt: {key: $str, azure-login: $bool, user-identity-id: $str, user-identity-client-id: $str, subscription-id: $str, resource-group: $str}}
    rec_aml: {type: "aml", subscription-id: $str, resource-group: $str, $opt: {user-identity-id: $str, user-identity-client-id: $str}}
    rec_itp: {type: "itp", subscription-id: $str, resource-group: $str}
    rec_singularity: {type: "singularity", subscription-id: $str, resource-group: $str, user-identity-id: $str, user-identity-client-id: $str}
    rec_virtual_cluster: {type: "virtual_cluster", subscription-id: $str, resource-group: $str}
    rec_storage: {type: "storage", provider: $ref-provider, $opt: {azure-login: $bool, key: $str, path: $str, pool_connections: $int}}
    rec_mongo: {type: "mongo", connection-string: $str}
    rec_odbc: {type: "odbc", connection-string: $str, azure-login: $bool}
    rec_email: {type: "email", connection-string: $str, from: $str}
    rec_openai: {type: "openai", org: $str, key: $str}
    rec_sms: {type: "sms", connection-string: $str, from: $str}
    rec_vault: {type: "vault", url: $str, $opt: {secret-name: $str}}
    rec_registry: {type: "registry", login-server: $str, $opt: {username: $str, password: $str, login: $bool, azure-login: $bool}}

    rec_target: {service: $ref-external, $opt: 
        {vm-size: $str, azure-image: $ref-batch-image, low-pri: $bool, sla: [premium, standard, basic], box-class: $ref-prefix, docker: $ref-docker, locations: $str-list,
        setup: $ref-setup, boxes: $str-list, vc: $str, cluster: $str, queue: $str, sku: $str, compute: $str, nodes: $int, install-docker: $bool, docker-run-cmd: $str }}

    rec_docker: {image: $str, $opt: {registry: $str, sha256: $str, post-sing-steps: $str-list, sing-wrap: $bool }}
    rec_setup: { $opt: {pre-cmds: $str-list, activate: $str, conda-packages: $str-list, pip-packages: $str-list, 
        python-path: $str-list, other-cmds: $str-list, use-sudo: $bool, install-blobfuse: $bool, mounting-enabled: $bool, python-version: $str, use-legacy-resolver: $bool } }
    rec_image: { $opt: {offer: $str, publisher: $str, sku: $str, node-agent-sku-id: $str, version: $str, custom-image-id: $str, docker-path: $str, mount-docker: $str} }
    rec_box: {address: $str, max-runs: $int, $opt: {os: $str, actions: $str-list, box-class: $ref-prefix, docker: $ref-docker, setup: $ref-setup}}
    rec_store: {storage: $ref-external, database: $ref-external, target: $ref-target, $opt: {vault: $ref-external, track-storage: $bool}}
    rec_filter: {prop: $str, type: $str, $opt: {op: $str, value: $str}}
    rec_team_member: {contact: $str-list, $opt: {approver: $bool}}
    rec_template: {$opt: {description: $str, command: $str, hidden: $bool, optional-args: $rec}}
    rec_event: {type: [job, node, run], when: [end_job, start_node, end_node, start_run, log_run, end_run], $opt: {report: $str-list, title: $str, if: $str}}
    
    rec_report: 
        columns: $str-list
        $opt: 
            sort: $str
            group: $str
            number-groups: $bool
            reverse: $bool
            max-width: $int
            precision: $int
            significance: $int
            max-fixed-length: $int
            uppercase-hdr: $bool
            right-align-numeric: $bool
            truncate-with-ellipses: $bool
            status: $str
            report-rollup: $bool
            last: $int
            count: $bool
            highlight: $str
            color-highlight: $str
            color-hdr: $str
            common: $bool
            hide-empty-cols: $str-list
            skip-lines: $int
            child: $bool
            parent: $bool
            exclude-from-hp-set: $str-list

external-services:
    $repeat:
        $str: {$select: {$select-key: type, $select-records: {
            batch: $rec_batch, 
            aml: $rec_aml, 
            itp: $rec_itp, 
            singularity: $rec_singularity, 
            virtual_cluster: $rec_virtual_cluster,
            storage: $rec_storage, 
            mongo: $rec_mongo, 
            odbc: $rec_odbc, 
            vault: $rec_vault, 
            email: $rec_email,
            openai: $rec_openai,
            sms: $rec_sms,
            registry: $rec_registry} } }

store: $ref-store

stores:
    $repeat:
        $str: $rec_store

compute-targets:
    $repeat:
        $str: $rec_target

dockers:
    $repeat:
        $str: $rec_docker

setups:
    $repeat:
        $str: $rec_setup

general:
    advanced-mode: $bool
    username: $str
    workspace: $str
    experiment: $str
    display-name: $str
    feedback: $bool
    run-cache-dir: $str
    distributed: $bool
    direct-run: $bool
    quick-start: $bool
    env-vars: $rec
    authentication: [auto, browser, device-code]
    remote-control: $bool
    monitor: $str
    max-run-workers: $int
    storage-cert-days: $num
    docker-pull-timeout: $str   
    docker-other-options: $str-list
    node-delay: $str
    schedule: [static, dynamic]
    node-heartbeat: $str
    max-run-duration: $str
    max-node-duration: $str
    max-put-size: $num
    rename-restarts: $bool

    # TODO: move to new metrics section
    primary-metric: $str
    maximize-metric: $bool
    step-name: $str

mounting:
    mount-retry-count: $int
    mount-retry-interval: $str

code:
    code-dirs: $str-list
    code-upload: $bool
    code-zip: [none, fast, compress] 
    code-omit: $str-list
    xtlib-upload: $bool
    working-dir: $str
    node-script-path: $str

after-files:
    after-dirs: $str-list
    after-upload: $bool
    after-omit: $str-list
    log-file-uploads: $bool

data:
    data-local: $str
    data-upload: $bool
    data-share-path: $str
    data-action: [none, download, mount]
    data-omit: $str-list
    data-writable: $bool

model:
    model-local: $str
    model-share-path: $str
    model-action: [none, dowhnload, mount]
    model-writable: $bool

database:
    update-job-stats: $bool
    update-run-stats: $bool       
    update-node-stats: $bool       
    add-log-records: $bool        
    buffer-metrics: $int
    max-log-workers: $int
    max-retries: $int
    fake-error-percent: $num
    chunk-size: $int
    max-backoff: $num
    max-run-delay: $num
    reset-connection: $bool                 # when true, new connection is established before any error is retried
    extended-logging: $bool                 # when true, all ODBC calls and errors are logged to console

mirroring:
    mirror-files: $str
    mirror-dest: [none, storage]
    mirror-delay-mins: $num
    mirror-log-files: $bool
    show-mirror-calls: $bool

logging:
    log: $bool
    notes: [none, before, after, all]
    show-missing-jobid-calls: $bool     
    capture-setup-cmds: $bool
    pip-freeze: $bool
    log-reports: $str-list
    snapshot-dirs: $bool
    merge-batch-logs: $bool
    add-timestamps: $bool
    log-db-stats: $bool
    capture-docker-pull: $bool
    log-controller-details: $bool

    # node usage variables
    node-usage-logging-enabled: $bool
    node-usage-sample-frequency: $str  
    node-usage-storage-frequency: $str 

internal:
    console: [none, normal, diagnostics, detail]
    stack-trace: $bool
    auto-start: $bool

commands: $str-list
  
aml-options:
    use-gpu: $bool
    framework: $str
    fw-version: $str
    # user-managed: $bool
    distributed-training: [mpi, gloo, nccl]
    max-seconds: $int

early-stopping:
    early-policy: [none, bandit, median, truncation]
    delay-evaluation: $num
    evaluation-interval: $num
    slack-factor: $num
    slack-amount: $num
    truncation-percentage: $num

hyperparameter-search:
    option-prefix: $str
    aggregate-dest: [job, experiment, none]
    search-type: [random, grid, bayesian, dgd]
    static-search: $bool
    max-minutes: $num
    max-runs: $int
    concurrent: $int
    hp-config: $str
    fn-generated-config: $str
    goal-metric: $num
    runs-per-set: $int
    max-passes: $int
    num-dgd-seeds: $int

hyperparameter-explorer:
    hx-cache-dir: $str
    steps-name: $str
    log-interval-name: $str
    time-name: $str
    sample-efficiency-name: $str
    success-rate-name: $str

plots:
    highlight: $str
    color-highlight: $str

compare-reports:
    omit-columns: $str-list

run-reports:
    $rec_report
    
job-reports:
    $rec_report

request-reports:
    $rec_report

named-columns:
    $repeat:
        $str: $str-list

node-reports:
    $rec_report

tensorboard:
    template: $str

script-launch-prefix:
    windows: $str
    linux: $str
    dsvm: $str
    dsvm18: $str
    dsvm20: $str
    ubuntu16: $str
    ubuntu18: $str
    ubuntu20: $str
    ubuntu20_gen2: $str
    ubuntu22: $str
    ubuntu22_gen2: $str
    azureml: $str
    itp: $str
    singularity: $str

azure-batch-images:
    $repeat:
        $str: $rec_image

user-filters:
    $repeat:
        $str: $rec_filter

team:
    $repeat:
        $str: $rec_team_member

events:
    $repeat:
        $str: $rec_event

boxes:
    $repeat:
        $str: $rec_box

templates: 
    $repeat:
        $str: $rec_template

providers:
    command: 
        $repeat: {$str: $str}

    compute: 
        $repeat: {$str: $str}

    hp-search: 
        $repeat: {$str: $str}

    storage: 
        $repeat: {$str: $str}


