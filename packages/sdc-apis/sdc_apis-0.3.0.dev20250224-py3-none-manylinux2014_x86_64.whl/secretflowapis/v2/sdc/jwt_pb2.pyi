"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2023 Ant Group Co., Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Jwe(google.protobuf.message.Message):
    """Jwe represents the JSON Web Encryption as specified in RFC 7516"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class JoseHeader(google.protobuf.message.Message):
        """JWE JOSE Header(Section 4 in RFC 7516)"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ALG_FIELD_NUMBER: builtins.int
        ENC_FIELD_NUMBER: builtins.int
        alg: builtins.str
        """the cryptographic algorithm(Section 4.1.1 in RFC 7515)

        such as "RSA-OAEP-256" or "SM2SM3"
        """
        enc: builtins.str
        """the content encryption algorithm used to perform authenticated encryption
        on the plaintext to produce the ciphertext and the Authentication Tag.

        such as "A128GCM" or "SM4GCM"
        """
        def __init__(
            self,
            *,
            alg: builtins.str = ...,
            enc: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["alg", b"alg", "enc", b"enc"]) -> None: ...

    PROTECTED_HEADER_FIELD_NUMBER: builtins.int
    ENCRYPTED_KEY_FIELD_NUMBER: builtins.int
    IV_FIELD_NUMBER: builtins.int
    CIPHERTEXT_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    AAD_FIELD_NUMBER: builtins.int
    protected_header: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(UTF8(JWE JOSE Header))
    Note: `json_name` refers to RFC 7516(Section 3.2), however the `protected`
    is a keywrod in C++, so the `protected_header` is used instead.
    """
    encrypted_key: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(JWE Encrypted Key)"""
    iv: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(JWE Initialization Vector)"""
    ciphertext: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(JWE Ciphertext)"""
    tag: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(JWE Authentication Tag)"""
    aad: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(JWE AAD)"""
    def __init__(
        self,
        *,
        protected_header: builtins.str = ...,
        encrypted_key: builtins.str = ...,
        iv: builtins.str = ...,
        ciphertext: builtins.str = ...,
        tag: builtins.str = ...,
        aad: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["aad", b"aad", "ciphertext", b"ciphertext", "encrypted_key", b"encrypted_key", "iv", b"iv", "protected_header", b"protected_header", "tag", b"tag"]) -> None: ...

global___Jwe = Jwe

@typing.final
class Jws(google.protobuf.message.Message):
    """Jws represents the JSON Web Signature as specified in RFC 7515"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class JoseHeader(google.protobuf.message.Message):
        """JWS JOSE Header(Section 4 in RFC 7515)"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ALG_FIELD_NUMBER: builtins.int
        X5C_FIELD_NUMBER: builtins.int
        alg: builtins.str
        """the cryptographic algorithm(Section 4.1.1 in RFC 7515)

        such as "RS256"
        """
        @property
        def x5c(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """The "x5c" (X.509 certificate chain) Header Parameter contains the
            X.509 public key certificate or certificate chain [RFC5280]
            corresponding to the key used to digitally sign the JWS.
            """

        def __init__(
            self,
            *,
            alg: builtins.str = ...,
            x5c: collections.abc.Iterable[builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["alg", b"alg", "x5c", b"x5c"]) -> None: ...

    PROTECTED_HEADER_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    protected_header: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(UTF8(JWS JOSE Header))
    Note: `json_name` refers to RFC 7515(Section 3.2), however the `protected`
    is a keywrod in C++, so the `protected_header` is used instead.
    """
    payload: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(JWS Payload)"""
    signature: builtins.str
    """RFC4648 BASE64_URL_UNPADDED(JWS Signature)"""
    def __init__(
        self,
        *,
        protected_header: builtins.str = ...,
        payload: builtins.str = ...,
        signature: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["payload", b"payload", "protected_header", b"protected_header", "signature", b"signature"]) -> None: ...

global___Jws = Jws
