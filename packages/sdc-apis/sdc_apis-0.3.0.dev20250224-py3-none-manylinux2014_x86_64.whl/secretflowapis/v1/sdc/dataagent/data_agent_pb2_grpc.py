# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from secretflowapis.v1.sdc.dataagent import data_agent_pb2 as secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2


class DataAgentStub(object):
    """DataAgent 是一个明文服务，作为访问 TEE 服务的统一入口，并且代理存储 TEE
    中的数据，具有以下几个功能模块：
    * 远程认证代理（Remote Attestation Proxy）：代理请求
    AECS，获取授权管理服务（Auth Management Service）的证书
    * 数据存储代理（Data Storage Proxy）：支持 OB 以及 MySQL 作为关系型数据库
    backend，存储数据 Meta 信息，并且具有行完整性保护；支持 OSS 作为对象存储
    backend，用于存储机构上传的加密数据以及中间结果
    * 应用管理（App Management）：负责 TEE 应用管理，注册、注销 TEE 应用

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterInsPubKey = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/RegisterInsPubKey',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.RegisterInsPubKeyRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.RegisterInsPubKeyResponse.FromString,
                )
        self.GetRaCertPems = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/GetRaCertPems',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.GetRaCertPemsRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.GetRaCertPemsResponse.FromString,
                )
        self.CreateDataInfo = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/CreateDataInfo',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataInfoRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataInfoResponse.FromString,
                )
        self.CreateDataAuth = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/CreateDataAuth',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataAuthRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataAuthResponse.FromString,
                )
        self.CreateDataWithAuth = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/CreateDataWithAuth',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataWithAuthRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataWithAuthResponse.FromString,
                )
        self.FinishDataUpload = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/FinishDataUpload',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.FinishDataUploadRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.FinishDataUploadResponse.FromString,
                )
        self.ExportData = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/ExportData',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataResponse.FromString,
                )
        self.ExportPartition = channel.unary_unary(
                '/secretflowapis.v1.sdc.dataagent.DataAgent/ExportPartition',
                request_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportPartitionRequest.SerializeToString,
                response_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataResponse.FromString,
                )


class DataAgentServicer(object):
    """DataAgent 是一个明文服务，作为访问 TEE 服务的统一入口，并且代理存储 TEE
    中的数据，具有以下几个功能模块：
    * 远程认证代理（Remote Attestation Proxy）：代理请求
    AECS，获取授权管理服务（Auth Management Service）的证书
    * 数据存储代理（Data Storage Proxy）：支持 OB 以及 MySQL 作为关系型数据库
    backend，存储数据 Meta 信息，并且具有行完整性保护；支持 OSS 作为对象存储
    backend，用于存储机构上传的加密数据以及中间结果
    * 应用管理（App Management）：负责 TEE 应用管理，注册、注销 TEE 应用

    """

    def RegisterInsPubKey(self, request, context):
        """机构注册公钥请求


        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRaCertPems(self, request, context):
        """/ 远程认证代理（Remote Attestation Proxy）功能相关接口

        名词解释：
        * 密钥管理服务，AECS
        AECS 是一个运行在 Enclave 中的密钥管理服务，负责 Enclave
        集群间不同副本间的密钥同步， AECS 会为授权管理服务集群创建一对公私钥。
        AECS 的更多介绍见：TODO
        * TECC 模式
        TECC 模式下的安全假设是同时攻破两个TEE才可攻破系统的安全性，
        因此数据需要以秘密分享的状态存储/计算。
        密钥管理服务以及授权管理服务都需要两实例部署，并且密钥隔离。

        接口描述：
        * 纯 TEE 模式（secret_shard_num = 1）下，调用`GetRaCertPems`接口可获得
        AECS 的认证报告， 报告中会包含授权管理服务的公钥证书。
        * TECC 模式（secret_shard_num = 2）下，调用`GetRaCertPems`接口可分别获得
        AECS 0 以及 AECS 1 的认证报告，
        各自包含授权管理服务 0 和授权管理服务 1 的公钥证书。
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDataInfo(self, request, context):
        """/ 创建数据

        创建数据 Meta 信息，服务端会返回数据上传路径以及上传访问
        Token， 用于后续数据上传
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDataAuth(self, request, context):
        """/ 创建数据授权

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDataWithAuth(self, request, context):
        """/ 创建数据以及数据授权

        功能为这两个接口的合并(`CreateDataInfo`, `CreateDataAuth`):
        创建数据 Meta 信息以及数据授权信息，服务端会返回数据上传路径以及上传访问
        Token， 用于后续数据上传
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishDataUpload(self, request, context):
        """告知服务数据上传完成
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportData(self, request, context):
        """/ 数据下载请求

        请求者调用本接口获取数据下载路径以及数据解密密钥，Data Agent 会访问 Auth
        Manager 对请求者身份进行鉴权.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportPartition(self, request, context):
        """/ 分区数据下载请求

        请求者调用本接口获取数据下载路径以及数据解密密钥，Data Agent 会访问 Auth
        Manager 对请求者身份进行鉴权.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataAgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterInsPubKey': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterInsPubKey,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.RegisterInsPubKeyRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.RegisterInsPubKeyResponse.SerializeToString,
            ),
            'GetRaCertPems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRaCertPems,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.GetRaCertPemsRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.GetRaCertPemsResponse.SerializeToString,
            ),
            'CreateDataInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataInfo,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataInfoRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataInfoResponse.SerializeToString,
            ),
            'CreateDataAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataAuth,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataAuthRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataAuthResponse.SerializeToString,
            ),
            'CreateDataWithAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataWithAuth,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataWithAuthRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataWithAuthResponse.SerializeToString,
            ),
            'FinishDataUpload': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishDataUpload,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.FinishDataUploadRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.FinishDataUploadResponse.SerializeToString,
            ),
            'ExportData': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportData,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataResponse.SerializeToString,
            ),
            'ExportPartition': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportPartition,
                    request_deserializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportPartitionRequest.FromString,
                    response_serializer=secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'secretflowapis.v1.sdc.dataagent.DataAgent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataAgent(object):
    """DataAgent 是一个明文服务，作为访问 TEE 服务的统一入口，并且代理存储 TEE
    中的数据，具有以下几个功能模块：
    * 远程认证代理（Remote Attestation Proxy）：代理请求
    AECS，获取授权管理服务（Auth Management Service）的证书
    * 数据存储代理（Data Storage Proxy）：支持 OB 以及 MySQL 作为关系型数据库
    backend，存储数据 Meta 信息，并且具有行完整性保护；支持 OSS 作为对象存储
    backend，用于存储机构上传的加密数据以及中间结果
    * 应用管理（App Management）：负责 TEE 应用管理，注册、注销 TEE 应用

    """

    @staticmethod
    def RegisterInsPubKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/RegisterInsPubKey',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.RegisterInsPubKeyRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.RegisterInsPubKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRaCertPems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/GetRaCertPems',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.GetRaCertPemsRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.GetRaCertPemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDataInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/CreateDataInfo',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataInfoRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDataAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/CreateDataAuth',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataAuthRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataAuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDataWithAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/CreateDataWithAuth',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataWithAuthRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.CreateDataWithAuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinishDataUpload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/FinishDataUpload',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.FinishDataUploadRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.FinishDataUploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/ExportData',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportPartition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/secretflowapis.v1.sdc.dataagent.DataAgent/ExportPartition',
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportPartitionRequest.SerializeToString,
            secretflowapis_dot_v1_dot_sdc_dot_dataagent_dot_data__agent__pb2.ExportDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
