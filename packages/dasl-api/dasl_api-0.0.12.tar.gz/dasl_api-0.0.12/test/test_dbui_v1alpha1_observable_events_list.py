# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.0.12
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.dbui_v1alpha1_observable_events_list import DbuiV1alpha1ObservableEventsList

class TestDbuiV1alpha1ObservableEventsList(unittest.TestCase):
    """DbuiV1alpha1ObservableEventsList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbuiV1alpha1ObservableEventsList:
        """Test DbuiV1alpha1ObservableEventsList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbuiV1alpha1ObservableEventsList`
        """
        model = DbuiV1alpha1ObservableEventsList()
        if include_optional:
            return DbuiV1alpha1ObservableEventsList(
                cursor = '',
                items = [
                    dasl_api.models.dbui_v1alpha1_observable_events_list_items_inner.dbui_v1alpha1_ObservableEventsList_items_inner(
                        from = 'notable', 
                        adjust_by = 1.337, 
                        notable = dasl_api.models.dbui_v1alpha1_observable_events_list_items_inner_notable.dbui_v1alpha1_ObservableEventsList_items_inner_notable(
                            id = '', 
                            rule_name = '', 
                            summary = '', ), )
                    ]
            )
        else:
            return DbuiV1alpha1ObservableEventsList(
        )
        """

    def testDbuiV1alpha1ObservableEventsList(self):
        """Test DbuiV1alpha1ObservableEventsList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
