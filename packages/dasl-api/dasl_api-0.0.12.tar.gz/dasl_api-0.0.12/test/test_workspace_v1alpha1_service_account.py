# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.0.12
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.workspace_v1alpha1_service_account import WorkspaceV1alpha1ServiceAccount

class TestWorkspaceV1alpha1ServiceAccount(unittest.TestCase):
    """WorkspaceV1alpha1ServiceAccount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkspaceV1alpha1ServiceAccount:
        """Test WorkspaceV1alpha1ServiceAccount
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkspaceV1alpha1ServiceAccount`
        """
        model = WorkspaceV1alpha1ServiceAccount()
        if include_optional:
            return WorkspaceV1alpha1ServiceAccount(
                api_version = '',
                kind = '',
                metadata = dasl_api.models.common/v1alpha1/object_meta.common.v1alpha1.ObjectMeta(
                    name = '', 
                    workspace = '', 
                    comment = '', 
                    annotations = {
                        'key' : ''
                        }, 
                    created_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    modified_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_successful_run_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    modified_by = '', 
                    version = 56, 
                    deleted = True, 
                    resource_status = 'none', 
                    ui_status = '', ),
                spec = dasl_api.models.workspace/v1alpha1/service_account_spec.workspace.v1alpha1.ServiceAccountSpec(
                    hash = '', 
                    roles = [
                        ''
                        ], ),
                status = dasl_api.models.workspace/v1alpha1/service_account_status.workspace.v1alpha1.ServiceAccountStatus(
                    credentials = null, )
            )
        else:
            return WorkspaceV1alpha1ServiceAccount(
                spec = dasl_api.models.workspace/v1alpha1/service_account_spec.workspace.v1alpha1.ServiceAccountSpec(
                    hash = '', 
                    roles = [
                        ''
                        ], ),
        )
        """

    def testWorkspaceV1alpha1ServiceAccount(self):
        """Test WorkspaceV1alpha1ServiceAccount"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
