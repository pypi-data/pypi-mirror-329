# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.0.12
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1alpha1_transform_spec_stream_tables_inner import CoreV1alpha1TransformSpecStreamTablesInner

class TestCoreV1alpha1TransformSpecStreamTablesInner(unittest.TestCase):
    """CoreV1alpha1TransformSpecStreamTablesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1alpha1TransformSpecStreamTablesInner:
        """Test CoreV1alpha1TransformSpecStreamTablesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1alpha1TransformSpecStreamTablesInner`
        """
        model = CoreV1alpha1TransformSpecStreamTablesInner()
        if include_optional:
            return CoreV1alpha1TransformSpecStreamTablesInner(
                name = '',
                alias = '',
                streaming = True,
                watermark = dasl_api.models.core_v1alpha1_transform_spec_stream_tables_inner_watermark.core_v1alpha1_TransformSpec_stream_tables_inner_watermark(
                    event_time_column = '', 
                    delay_threshold = '', 
                    drop_duplicates = [
                        ''
                        ], ),
                join_type = '',
                join_expr = ''
            )
        else:
            return CoreV1alpha1TransformSpecStreamTablesInner(
        )
        """

    def testCoreV1alpha1TransformSpecStreamTablesInner(self):
        """Test CoreV1alpha1TransformSpecStreamTablesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
