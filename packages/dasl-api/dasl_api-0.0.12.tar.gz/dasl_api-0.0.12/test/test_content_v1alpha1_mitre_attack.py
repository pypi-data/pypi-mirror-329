# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.0.12
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.content_v1alpha1_mitre_attack import ContentV1alpha1MitreAttack

class TestContentV1alpha1MitreAttack(unittest.TestCase):
    """ContentV1alpha1MitreAttack unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentV1alpha1MitreAttack:
        """Test ContentV1alpha1MitreAttack
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentV1alpha1MitreAttack`
        """
        model = ContentV1alpha1MitreAttack()
        if include_optional:
            return ContentV1alpha1MitreAttack(
                tactics = [
                    dasl_api.models.content/v1alpha1/mitre_tactic.content.v1alpha1.MitreTactic(
                        name = '', 
                        techniques = [
                            dasl_api.models.content/v1alpha1/mitre_technique.content.v1alpha1.MitreTechnique(
                                identifier = '', 
                                name = '', 
                                subtechniques = [
                                    dasl_api.models.content/v1alpha1/mitre_sub_technique.content.v1alpha1.MitreSubTechnique(
                                        identifier = '', 
                                        name = '', )
                                    ], )
                            ], )
                    ]
            )
        else:
            return ContentV1alpha1MitreAttack(
                tactics = [
                    dasl_api.models.content/v1alpha1/mitre_tactic.content.v1alpha1.MitreTactic(
                        name = '', 
                        techniques = [
                            dasl_api.models.content/v1alpha1/mitre_technique.content.v1alpha1.MitreTechnique(
                                identifier = '', 
                                name = '', 
                                subtechniques = [
                                    dasl_api.models.content/v1alpha1/mitre_sub_technique.content.v1alpha1.MitreSubTechnique(
                                        identifier = '', 
                                        name = '', )
                                    ], )
                            ], )
                    ],
        )
        """

    def testContentV1alpha1MitreAttack(self):
        """Test ContentV1alpha1MitreAttack"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
