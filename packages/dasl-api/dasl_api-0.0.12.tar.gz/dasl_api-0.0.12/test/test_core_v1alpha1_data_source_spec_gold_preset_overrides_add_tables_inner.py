# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.0.12
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1alpha1_data_source_spec_gold_preset_overrides_add_tables_inner import CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner

class TestCoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner(unittest.TestCase):
    """CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner:
        """Test CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner`
        """
        model = CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner()
        if include_optional:
            return CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner(
                name = '',
                source_table = '',
                custom = dasl_api.models.core_v1alpha1_data_source_spec_gold_preset_overrides_add_tables_inner_custom.core_v1alpha1_DataSourceSpec_gold_presetOverrides_addTables_inner_custom(
                    function = '', 
                    options = {
                        'key' : ''
                        }, ),
                filter = '',
                post_filter = '',
                override_liquid_columns = [
                    ''
                    ],
                fields = [
                    dasl_api.models.core/v1alpha1/data_source/field_spec.core.v1alpha1.DataSource.FieldSpec(
                        name = '', 
                        comment = '', 
                        assert = [
                            dasl_api.models.core_v1alpha1_data_source_field_spec_assert_inner.core_v1alpha1_DataSource_FieldSpec_assert_inner(
                                expr = '', 
                                message = '', )
                            ], 
                        from = '', 
                        alias = '', 
                        expr = '', 
                        literal = '', 
                        join = dasl_api.models.core_v1alpha1_data_source_field_spec_join.core_v1alpha1_DataSource_FieldSpec_join(
                            with_table = '', 
                            with_csv = dasl_api.models.core_v1alpha1_data_source_field_spec_join_with_csv.core_v1alpha1_DataSource_FieldSpec_join_withCSV(
                                path = '', ), 
                            lhs = '', 
                            rhs = '', 
                            select = '', ), )
                    ],
                utils = dasl_api.models.core/v1alpha1/data_source/field_utils.core.v1alpha1.DataSource.FieldUtils(
                    unreferenced_columns = dasl_api.models.core_v1alpha1_data_source_field_utils_unreferenced_columns.core_v1alpha1_DataSource_FieldUtils_unreferencedColumns(
                        preserve = True, 
                        embed_column = '', 
                        omit_columns = [
                            ''
                            ], 
                        duplicate_prefix = '', ), 
                    json_extract = [
                        dasl_api.models.core_v1alpha1_data_source_field_utils_json_extract_inner.core_v1alpha1_DataSource_FieldUtils_jsonExtract_inner(
                            source = '', 
                            omit_fields = [
                                ''
                                ], 
                            duplicate_prefix = '', 
                            embed_column = '', )
                        ], )
            )
        else:
            return CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner(
        )
        """

    def testCoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner(self):
        """Test CoreV1alpha1DataSourceSpecGoldPresetOverridesAddTablesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
