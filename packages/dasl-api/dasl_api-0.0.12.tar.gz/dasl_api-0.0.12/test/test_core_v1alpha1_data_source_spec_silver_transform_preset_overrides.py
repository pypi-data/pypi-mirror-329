# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API.

    The version of the OpenAPI document: 0.0.12
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dasl_api.models.core_v1alpha1_data_source_spec_silver_transform_preset_overrides import CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides

class TestCoreV1alpha1DataSourceSpecSilverTransformPresetOverrides(unittest.TestCase):
    """CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides:
        """Test CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides`
        """
        model = CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides()
        if include_optional:
            return CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides(
                modify_tables = [
                    dasl_api.models.core_v1alpha1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner.core_v1alpha1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner(
                        name = '', 
                        custom = dasl_api.models.core_v1alpha1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner_custom.core_v1alpha1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner_custom(
                            function = '', 
                            options = {
                                'key' : ''
                                }, ), 
                        omit_fields = [
                            ''
                            ], 
                        override_liquid_columns = [
                            ''
                            ], 
                        add_fields = [
                            dasl_api.models.core/v1alpha1/data_source/field_spec.core.v1alpha1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1alpha1_data_source_field_spec_assert_inner.core_v1alpha1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1alpha1_data_source_field_spec_join.core_v1alpha1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1alpha1_data_source_field_spec_join_with_csv.core_v1alpha1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], 
                        filter = '', 
                        post_filter = '', 
                        utils = null, )
                    ],
                omit_tables = [
                    ''
                    ],
                add_tables = [
                    dasl_api.models.core_v1alpha1_data_source_spec_silver_transform_preset_overrides_add_tables_inner.core_v1alpha1_DataSourceSpec_silver_transform_presetOverrides_addTables_inner(
                        custom = dasl_api.models.core_v1alpha1_data_source_spec_silver_transform_preset_overrides_modify_tables_inner_custom.core_v1alpha1_DataSourceSpec_silver_transform_presetOverrides_modifyTables_inner_custom(
                            function = '', 
                            options = {
                                'key' : ''
                                }, ), 
                        name = '', 
                        filter = '', 
                        post_filter = '', 
                        override_liquid_columns = [
                            ''
                            ], 
                        fields = [
                            dasl_api.models.core/v1alpha1/data_source/field_spec.core.v1alpha1.DataSource.FieldSpec(
                                name = '', 
                                comment = '', 
                                assert = [
                                    dasl_api.models.core_v1alpha1_data_source_field_spec_assert_inner.core_v1alpha1_DataSource_FieldSpec_assert_inner(
                                        expr = '', 
                                        message = '', )
                                    ], 
                                from = '', 
                                alias = '', 
                                expr = '', 
                                literal = '', 
                                join = dasl_api.models.core_v1alpha1_data_source_field_spec_join.core_v1alpha1_DataSource_FieldSpec_join(
                                    with_table = '', 
                                    with_csv = dasl_api.models.core_v1alpha1_data_source_field_spec_join_with_csv.core_v1alpha1_DataSource_FieldSpec_join_withCSV(
                                        path = '', ), 
                                    lhs = '', 
                                    rhs = '', 
                                    select = '', ), )
                            ], 
                        utils = null, )
                    ]
            )
        else:
            return CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides(
        )
        """

    def testCoreV1alpha1DataSourceSpecSilverTransformPresetOverrides(self):
        """Test CoreV1alpha1DataSourceSpecSilverTransformPresetOverrides"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
