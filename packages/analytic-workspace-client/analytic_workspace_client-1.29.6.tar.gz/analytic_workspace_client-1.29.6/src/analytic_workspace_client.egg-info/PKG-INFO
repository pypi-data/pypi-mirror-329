Metadata-Version: 2.1
Name: analytic_workspace_client
Version: 1.29.6
Summary: Библиотека для подключения к Analytic Workspace
Home-page: https://analyticworkspace.ru/
Author: Analytic Workspace
Author-email: aw_help@analyticworkspace.ru
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8,<4
Description-Content-Type: text/markdown
Requires-Dist: python-dotenv<1.1,>=1.0
Requires-Dist: httpx<1.0,>=0.25
Requires-Dist: pandas
Requires-Dist: pydantic>=2.0
Requires-Dist: colorama<0.5,>=0.4
Requires-Dist: jwt==1.3.1
Provides-Extra: dev
Requires-Dist: pyspark==3.5.0; extra == "dev"
Requires-Dist: pytest<8.3,>=8.2; extra == "dev"
Requires-Dist: pyparsing<3.3,>=3.2; extra == "dev"
Requires-Dist: requests<2.33,>=2.32; extra == "dev"
Provides-Extra: ml
Requires-Dist: mlflow==2.14.3; extra == "ml"

# Библиотека для Analytic Workspace

## Получение токена

Перейдите по ссылке https://aw.example.ru/data-master/get-token (вместо https://aw.example.ru/ укажите адрес вашего сервера Analytic Workspace).

Значение токена лучше всего сохранить в отдельном файл или поместить в переменную окружения `AW_DATA_TOKEN`.

## Пример использования

```python
from aw_client import Session


with open('aw_token', 'rt') as f:
    aw_token = f.read()

session = Session(token=aw_token, aw_url='https://aw.example.ru')

# Если токен доступа указан в переменной окружения AW_DATA_TOKEN, то объект сессии можно создавать 
# без явного указания параметра token: session = Session(aw_url='https://aw.example.ru')

df = session.load(model_id=123)  # df: pandas.DataFrame

display(df)
```
