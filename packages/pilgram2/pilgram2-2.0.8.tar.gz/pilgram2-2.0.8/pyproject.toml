[project]
name = "pilgram2"
requires-python = ">=3.10,<3.14"
version = "2.0.8"
description = "library for instagram filters"
authors = [
    { name = "Michael G", email = "me@mgineer85.de" },
    { name = "Akiomi Kamakura", email = "akiomik@gmail.com" },
]
maintainers = [
    { name = "Michael G", email = "me@mgineer85.de" },
]
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "pillow",
    "instagram",
    "instagram-filters",
    "css-filters",
    "image-blending",
    "blend-modes",
    "image-processing",
    "data-augmentation",
]
dependencies = [
    "numpy>=2.0.1",
    "pillow>=10.0.0",
]

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/mgineer85/pilgram2"
Repository = "https://github.com/mgineer85/pilgram2"
"Bug Tracker" = "https://github.com/mgineer85/pilgram2/issues"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "B",
    "UP",
    "I",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts = "-v --cov=pilgram2 --benchmark-skip"

[tool.coverage.run]
omit = [
    "*/tests/*",
]

[tool.coverage.report]
show_missing = true

[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.1.0",
    "pytest-cov>=5.0.0",
    "pillow>=10.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
]
lint = [
    "ruff>=0.3.5",
]

[tool.pdm.build]
includes = [
    "./pilgram2",
]

[tool.pdm.scripts]
lint = "ruff check ."
format = "ruff format ."
test = "pytest --cov-report=term --cov-report=xml:coverage.xml"
benchmark = "pytest --benchmark-only --benchmark-max-time=5 --benchmark-columns='mean,stddev,min,max'"
