Metadata-Version: 2.2
Name: SolarAge
Version: 0.0.2
Summary: A Python package for calculating and converting Persian, Islamic, and Gregorian dates, along with zodiac signs, animal years, birthstones, and age calculations based on the Persian calendar.
Author-email: Ali Ayati Qaffari <ayatiali910@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Ali Ayati Qaffari
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Profile, https://github.com/MrAAQPy
Project-URL: github, https://github.com/MrAAQPy/SolarAge
Project-URL: issue, https://github.com/MrAAQPy/SolarAge/issues
Project-URL: bale, https://ble.ir/aaq1386
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: jdatetime
Requires-Dist: convertdate


# SolarAge

`SolarAge` is a Python package designed to provide detailed information about a person's birthday, including zodiac signs, animal years, age calculations, and season of birth. It supports conversions between the Persian (Jalali), Gregorian, and Islamic calendars.

## Features

- **Zodiac Sign**: Get the zodiac sign based on the Gregorian birthdate.
- **Animal Year**: Calculate the Chinese Zodiac animal year.
- **Birthstone**: Get the birthstone based on the Persian month.
- **Age Calculation**: Calculate a person's age in years, months, and days.
- **Season**: Determine the season of birth (Spring, Summer, Autumn, or Winter).
- **Moon Rotation**: Get the approximate number of moon rotations since the birthdate.
- **Date Conversions**: Convert birthdate between Persian, Gregorian, and Islamic calendars.
- **Days Until Next Birthday**: Calculate the number of days until the next birthday.

## Installation

You can install the package using `pip`:

```bash
pip install SolarAge
```

## Usage

Here's an example of how to use the `SolarAge` class:

```python
from SolarAge import BirthdayInfo

# Create an instance of BirthdayInfo with a Persian birthdate (year, month, day)
bd = BirthdayInfo(1386, 2, 3)

# Get detailed birthday information
info = bd.get_info()

# Print the information
print(info)
```

### Output Example:

```python
{
    "birthday": "3 Ordibehesht، 1386",
    "miladi": "2007 ، April 23",
    "ghamari": "1428 7 23",
    "age_years": 17,
    "age_months": 9,
    "age_days": 18,
    "total_days": "6,516",
    "week_day": "Saturday",
    "season": "Spring",
    "zodiac_sign": "Taurus",
    "animal_year": "Pig",
    "days_until_birthday": 52,
    "moon_rotation": 241,
}
```

## Dependencies

- `jdatetime`: For working with the Persian (Jalali) calendar.
- `convertdate`: For converting between Gregorian, Islamic, and Persian calendars.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.


### Explanation:
1. **Features**: Describes the key features of your package.
2. **Installation**: Instructions to install the package via `pip`.
3. **Usage**: A code snippet demonstrating how to use the `SolarAge` class.
4. **Dependencies**: Lists the external libraries required for your package to function.
5. **License**: Optional section if you're including a license for the project.

