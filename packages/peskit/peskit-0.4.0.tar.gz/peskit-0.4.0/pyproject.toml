[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "peskit"
version = "0.4.0"
authors = [{ name = "Mingi Jho", email = "mingi.jho@kaist.ac.kr" }]
description = "peskit"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["Condensed Matter Physics", "ARPES"]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

dependencies = [
    "igor2>=0.5.9",
    "lmfit>=1.3.2",
    "matplotlib>=3.10.0",
    "numba>=0.61.0",
    "numpy>=1.3.2",
    "xarray>=2025.1.2",
    "xrfit",
]

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "pre-commit>=4.1.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.0",
    "commitizen>=3.29.0",
    "ruff>=0.6.3",
    "lxml>=5.3.0",
    "ipykernel>=6.29.5",
]



[project.urls]
Repository = "https://github.com/mgjho/peskit.git"
Issues = "https://github.com/mgjho/peskit/issues"

[tool.commitizen]
change_type_map = { "BREAKING CHANGE" = "💥 Breaking Changes", "feat" = "✨ Features", "fix" = "🐞 Bug Fixes", "refactor" = "♻️ Code Refactor", "perf" = "⚡️ Performance" }

version_provider = "pep621"
update_changelog_on_bump = true
tag_format = "v$version"
changelog_merge_prerelease = true

major_version_zero = true
change_type_order = [
    "💥 Breaking Changes",
    "✨ Features",
    "🐞 Bug Fixes",
    "♻️ Code Refactor",
    "⚡️ Performance",
]

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "D",
    "UP",
    "YTT",
    "ASYNC",
    "B",
    "A",
    "C4",
    "FA",
    "ICN",
    "LOG",
    "G",
    "PIE",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "TRY",
    "FLY",
    "NPY",
    "PERF",
    "FURB",
    "RUF",
]
ignore = [
    "E501",    # Line too long
    "PLW2901", # Outer variable overwritten by inner target
    "ICN001",  # Import conventions
    "TRY003",  # Long exception messages
    "B006",    # Do not use mutable defaults for parameters
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
]
extend-select = []
allowed-confusables = [
    "×",
    "−",
    "𝑎",
    "𝒂",
    "𝑏",
    "𝒃",
    "𝑐",
    "𝑥",
    "𝑦",
    "𝑧",
    "𝛼",
    "γ",
    "𝛾",
    "ν",
    "α",
]
exclude = ["*.ipynb"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
pythonpath = "src"
testpaths = "test"

[tool.coverage.run]
source = ["src"]
concurrency = ["multiprocessing", "thread"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
allow_redefinition = true
check_untyped_defs = false
exclude = ['^docs/', '^tests/']
disable_error_code = ['import-untyped', 'import-not-found']
pretty = true

[tool.uv.sources]
xrfit = { git = "https://github.com/mgjho/xrfit.git" }
