Metadata-Version: 2.1
Name: wikimedia-enterprise-mcp
Version: 0.1.4
Summary: implementation of the model context protocol for the wikimedia enterprise api and wikibase REST API
Home-page: https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol
License: MIT
Keywords: wikimedia,wikidata,wikipedia,mcp
Author: Daniel Erenrich
Author-email: derenrich@wikimedia.org
Requires-Python: >=3.11,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: asyncer (>=0.0.8,<0.0.9)
Requires-Dist: mcp (>=1.0.0,<2.0.0)
Requires-Dist: mediawikiapi (>=1.2,<2.0)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: wiki2md (>=0.1.3,<0.2.0)
Requires-Dist: wikibase-rest-api-client (>=0.2.1,<0.3.0)
Requires-Dist: wme (>=0.1.0,<0.2.0)
Project-URL: Repository, https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol
Description-Content-Type: text/markdown

# Python Wikimedia Enterprise Model Context Protocol Implementation

This is not the official MCP implementation for the Wikimedia Enterprise API.

##

To run make a .env file in this directory with `WME_USERNAME` and `WME_PASSWORD` (you can get free credentials at https://enterprise.wikimedia.com/).

Currently to use this you need to install Anthropic Desktop and then add it to your `claude_desktop_config.json`.

A sample json would look like:

```json
{
  "mcpServers": {
    "wikimedia-enterprise": {
      "command": "uvx",
      "args": [
        "wikimedia-enterprise-mcp@latest",
        "--username",
        "...",
        "--password",
        "..."
      ]
    }
  }
}
```

but remember to enter in your credentials.

### Installation

Git clone the repo. You need to have `poetry` installed to manage the dependencies (and a modern version of python).

## Testing

For testing make a `.env` file with `WME_USERNAME` and `WME_PASSWORD`.

Install the pre-commit hooks with `poetry run pre-commit install` or just run them manually e.g. `poetry run ruff check`

