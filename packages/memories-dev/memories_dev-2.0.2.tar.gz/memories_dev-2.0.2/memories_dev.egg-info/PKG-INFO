Metadata-Version: 2.2
Name: memories-dev
Version: 2.0.2
Summary: Collective Memory Infrastructure for AGI
Home-page: https://memories.dev
Author: Memories-dev
Author-email: Memories-dev Team <team@memories-app.com>
Maintainer-email: Memories-dev <hello@memories.dev>
License:                                  Apache License
                                   Version 2.0, January 2004
                                http://www.apache.org/licenses/
        
           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
           1. Definitions.
        
              "License" shall mean the terms and conditions for use, reproduction,
              and distribution as defined by Sections 1 through 9 of this document.
        
              "Licensor" shall mean the copyright owner or entity authorized by
              the copyright owner that is granting the License.
        
              "Legal Entity" shall mean the union of the acting entity and all
              other entities that control, are controlled by, or are under common
              control with that entity. For the purposes of this definition,
              "control" means (i) the power, direct or indirect, to cause the
              direction or management of such entity, whether by contract or
              otherwise, or (ii) ownership of fifty percent (50%) or more of the
              outstanding shares, or (iii) beneficial ownership of such entity.
        
              "You" (or "Your") shall mean an individual or Legal Entity
              exercising permissions granted by this License.
        
              "Source" form shall mean the preferred form for making modifications,
              including but not limited to software source code, documentation
              source, and configuration files.
        
              "Object" form shall mean any form resulting from mechanical
              transformation or translation of a Source form, including but
              not limited to compiled object code, generated documentation,
              and conversions to other media types.
        
              "Work" shall mean the work of authorship, whether in Source or
              Object form, made available under the License, as indicated by a
              copyright notice that is included in or attached to the work
              (an example is provided in the Appendix below).
        
              "Derivative Works" shall mean any work, whether in Source or Object
              form, that is based on (or derived from) the Work and for which the
              editorial revisions, annotations, elaborations, or other modifications
              represent, as a whole, an original work of authorship. For the purposes
              of this License, Derivative Works shall not include works that remain
              separable from, or merely link (or bind by name) to the interfaces of,
              the Work and Derivative Works thereof.
        
              "Contribution" shall mean any work of authorship, including
              the original version of the Work and any modifications or additions
              to that Work or Derivative Works thereof, that is intentionally
              submitted to Licensor for inclusion in the Work by the copyright owner
              or by an individual or Legal Entity authorized to submit on behalf of
              the copyright owner. For the purposes of this definition, "submitted"
              means any form of electronic, verbal, or written communication sent
              to the Licensor or its representatives, including but not limited to
              communication on electronic mailing lists, source code control systems,
              and issue tracking systems that are managed by, or on behalf of, the
              Licensor for the purpose of discussing and improving the Work, but
              excluding communication that is conspicuously marked or otherwise
              designated in writing by the copyright owner as "Not a Contribution."
        
              "Contributor" shall mean Licensor and any individual or Legal Entity
              on behalf of whom a Contribution has been received by Licensor and
              subsequently incorporated within the Work.
        
           2. Grant of Copyright License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              copyright license to reproduce, prepare Derivative Works of,
              publicly display, publicly perform, sublicense, and distribute the
              Work and such Derivative Works in Source or Object form.
        
           3. Grant of Patent License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              (except as stated in this section) patent license to make, have made,
              use, offer to sell, sell, import, and otherwise transfer the Work,
              where such license applies only to those patent claims licensable
              by such Contributor that are necessarily infringed by their
              Contribution(s) alone or by combination of their Contribution(s)
              with the Work to which such Contribution(s) was submitted. If You
              institute patent litigation against any entity (including a
              cross-claim or counterclaim in a lawsuit) alleging that the Work
              or a Contribution incorporated within the Work constitutes direct
              or contributory patent infringement, then any patent licenses
              granted to You under this License for that Work shall terminate
              as of the date such litigation is filed.
        
           4. Redistribution. You may reproduce and distribute copies of the
              Work or Derivative Works thereof in any medium, with or without
              modifications, and in Source or Object form, provided that You
              meet the following conditions:
        
              (a) You must give any other recipients of the Work or
                  Derivative Works a copy of this License; and
        
              (b) You must cause any modified files to carry prominent notices
                  stating that You changed the files; and
        
              (c) You must retain, in the Source form of any Derivative Works
                  that You distribute, all copyright, patent, trademark, and
                  attribution notices from the Source form of the Work,
                  excluding those notices that do not pertain to any part of
                  the Derivative Works; and
        
              (d) If the Work includes a "NOTICE" text file as part of its
                  distribution, then any Derivative Works that You distribute must
                  include a readable copy of the attribution notices contained
                  within such NOTICE file, excluding those notices that do not
                  pertain to any part of the Derivative Works, in at least one
                  of the following places: within a NOTICE text file distributed
                  as part of the Derivative Works; within the Source form or
                  documentation, if provided along with the Derivative Works; or,
                  within a display generated by the Derivative Works, if and
                  wherever such third-party notices normally appear. The contents
                  of the NOTICE file are for informational purposes only and
                  do not modify the License. You may add Your own attribution
                  notices within Derivative Works that You distribute, alongside
                  or as an addendum to the NOTICE text from the Work, provided
                  that such additional attribution notices cannot be construed
                  as modifying the License.
        
              You may add Your own copyright statement to Your modifications and
              may provide additional or different license terms and conditions
              for use, reproduction, or distribution of Your modifications, or
              for any such Derivative Works as a whole, provided Your use,
              reproduction, and distribution of the Work otherwise complies with
              the conditions stated in this License.
        
           5. Submission of Contributions. Unless You explicitly state otherwise,
              any Contribution intentionally submitted for inclusion in the Work
              by You to the Licensor shall be under the terms and conditions of
              this License, without any additional terms or conditions.
              Notwithstanding the above, nothing herein shall supersede or modify
              the terms of any separate license agreement you may have executed
              with Licensor regarding such Contributions.
        
           6. Trademarks. This License does not grant permission to use the trade
              names, trademarks, service marks, or product names of the Licensor,
              except as required for reasonable and customary use in describing the
              origin of the Work and reproducing the content of the NOTICE file.
        
           7. Disclaimer of Warranty. Unless required by applicable law or
              agreed to in writing, Licensor provides the Work (and each
              Contributor provides its Contributions) on an "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
              implied, including, without limitation, any warranties or conditions
              of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
              PARTICULAR PURPOSE. You are solely responsible for determining the
              appropriateness of using or redistributing the Work and assume any
              risks associated with Your exercise of permissions under this License.
        
           8. Limitation of Liability. In no event and under no legal theory,
              whether in tort (including negligence), contract, or otherwise,
              unless required by applicable law (such as deliberate and grossly
              negligent acts) or agreed to in writing, shall any Contributor be
              liable to You for damages, including any direct, indirect, special,
              incidental, or consequential damages of any character arising as a
              result of this License or out of the use or inability to use the
              Work (including but not limited to damages for loss of goodwill,
              work stoppage, computer failure or malfunction, or any and all
              other commercial damages or losses), even if such Contributor
              has been advised of the possibility of such damages.
        
           9. Accepting Warranty or Additional Liability. While redistributing
              the Work or Derivative Works thereof, You may choose to offer,
              and charge a fee for, acceptance of support, warranty, indemnity,
              or other liability obligations and/or rights consistent with this
              License. However, in accepting such obligations, You may act only
              on Your own behalf and on Your sole responsibility, not on behalf
              of any other Contributor, and only if You agree to indemnify,
              defend, and hold each Contributor harmless for any liability
              incurred by, or claims asserted against, such Contributor by reason
              of your accepting any such warranty or additional liability.
        
           END OF TERMS AND CONDITIONS
        
           APPENDIX: How to apply the Apache License to your work.
        
              To apply the Apache License to your work, attach the following
              boilerplate notice, with the fields enclosed by brackets "[]"
              replaced with your own identifying information. (Don't include
              the brackets!)  The text should be enclosed in the appropriate
              comment syntax for the file format. We also recommend that a
              file or class name and description of purpose be included on the
              same "printed page" as the copyright notice for easier
              identification within third-party archives.
        
           Copyright [yyyy] [name of copyright owner]
        
           Licensed under the Apache License, Version 2.0 (the "License");
           you may not use this file except in compliance with the License.
           You may obtain a copy of the License at
        
               http://www.apache.org/licenses/LICENSE-2.0
        
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
        
Project-URL: Homepage, https://memories.dev
Project-URL: Documentation, https://docs.memories.dev
Project-URL: Repository, https://github.com/Vortx-AI/memories-dev.git
Project-URL: Issues, https://github.com/Vortx-AI/memories-dev/issues
Project-URL: Changelog, https://github.com/Vortx-AI/memories-dev/blob/main/CHANGELOG.md
Keywords: earth observation,data processing,memory management
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Natural Language :: English
Requires-Python: >=3.9,<3.14.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch>=2.2.0
Requires-Dist: transformers>=4.30.0
Requires-Dist: diffusers>=0.25.0
Requires-Dist: langchain>=0.1.0
Requires-Dist: langchain-community>=0.0.1
Requires-Dist: numpy<2.0.0,>=1.24.4
Requires-Dist: pandas>=2.0.0
Requires-Dist: duckdb>=0.9.0
Requires-Dist: pyarrow>=14.0.1
Requires-Dist: matplotlib>=3.7.0
Requires-Dist: geopandas>=0.14.0
Requires-Dist: rasterio>=1.3.8
Requires-Dist: shapely<3.0.0,>=2.0.0
Requires-Dist: mercantile>=1.2.1
Requires-Dist: mapbox-vector-tile>=2.0.1
Requires-Dist: pyproj>=3.6.1
Requires-Dist: pystac>=1.8.0
Requires-Dist: osmnx>=1.9.0
Requires-Dist: py6s>=1.9.0
Requires-Dist: geopy>=2.4.1
Requires-Dist: folium>=0.15.1
Requires-Dist: rtree>=1.1.0
Requires-Dist: owslib>=0.31.0
Requires-Dist: pillow>=10.0.0
Requires-Dist: opencv-python>=4.8.0
Requires-Dist: albumentations>=1.3.1
Requires-Dist: nltk>=3.8.1
Requires-Dist: faiss-cpu>=1.7.4
Requires-Dist: sentence-transformers>=2.2.0
Requires-Dist: redis>=5.0.0
Requires-Dist: xarray>=2023.0.0
Requires-Dist: dask>=2024.1.0
Requires-Dist: fastapi>=0.109.0
Requires-Dist: pydantic>=2.6.0
Requires-Dist: uvicorn>=0.27.0
Requires-Dist: aiohttp>=3.9.0
Requires-Dist: requests>=2.31.0
Requires-Dist: planetary-computer>=1.0.0
Requires-Dist: pystac-client>=0.8.3
Requires-Dist: earthengine-api>=0.1.390
Requires-Dist: tqdm>=4.65.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: pyyaml>=6.0.1
Requires-Dist: cryptography>=42.0.0
Requires-Dist: typing-extensions>=4.9.0
Requires-Dist: fsspec>=2024.2.0
Requires-Dist: noise>=1.2.2
Provides-Extra: py39
Requires-Dist: numpy<2.0.0,>=1.24.4; extra == "py39"
Requires-Dist: pandas<2.1.0,>=2.0.0; extra == "py39"
Requires-Dist: matplotlib<3.8.0; extra == "py39"
Requires-Dist: scikit-learn<1.4.0; extra == "py39"
Requires-Dist: albumentations<1.4.0; extra == "py39"
Requires-Dist: accelerate<1.4.0; extra == "py39"
Requires-Dist: shapely<2.0.0,>=1.7.0; extra == "py39"
Requires-Dist: mapbox-vector-tile<2.0.0,>=1.2.0; extra == "py39"
Provides-Extra: py310
Requires-Dist: numpy<2.0.0,>=1.24.4; extra == "py310"
Requires-Dist: pandas>=2.0.0; extra == "py310"
Requires-Dist: matplotlib>=3.7.0; extra == "py310"
Requires-Dist: scikit-learn>=1.3.0; extra == "py310"
Requires-Dist: shapely<2.0.0,>=1.7.0; extra == "py310"
Requires-Dist: mapbox-vector-tile<2.0.0,>=1.2.0; extra == "py310"
Provides-Extra: py311
Requires-Dist: numpy<2.0.0,>=1.24.4; extra == "py311"
Requires-Dist: pandas>=2.0.0; extra == "py311"
Requires-Dist: matplotlib>=3.7.0; extra == "py311"
Requires-Dist: scikit-learn>=1.3.0; extra == "py311"
Requires-Dist: shapely<2.0.0,>=1.7.0; extra == "py311"
Requires-Dist: mapbox-vector-tile<2.0.0,>=1.2.0; extra == "py311"
Provides-Extra: py312
Requires-Dist: numpy<2.0.0,>=1.26.0; extra == "py312"
Requires-Dist: pandas>=2.2.0; extra == "py312"
Requires-Dist: matplotlib>=3.8.0; extra == "py312"
Requires-Dist: scikit-learn>=1.3.0; extra == "py312"
Requires-Dist: shapely<2.0.0,>=1.7.0; extra == "py312"
Requires-Dist: mapbox-vector-tile<2.0.0,>=1.2.0; extra == "py312"
Provides-Extra: py313
Requires-Dist: numpy<2.0.0,>=1.26.0; extra == "py313"
Requires-Dist: pandas>=2.2.0; extra == "py313"
Requires-Dist: matplotlib>=3.8.0; extra == "py313"
Requires-Dist: scikit-learn>=1.3.0; extra == "py313"
Requires-Dist: shapely<3.0.0,>=2.0.0; extra == "py313"
Requires-Dist: mapbox-vector-tile>=2.0.1; extra == "py313"
Provides-Extra: gpu
Requires-Dist: torch>=2.2.0; extra == "gpu"
Requires-Dist: torchvision>=0.17.0; extra == "gpu"
Requires-Dist: torchaudio>=2.2.0; extra == "gpu"
Requires-Dist: faiss-gpu==1.7.2; extra == "gpu"
Requires-Dist: cupy-cuda12x>=12.0.0; extra == "gpu"
Requires-Dist: torch-scatter>=2.1.2; extra == "gpu"
Requires-Dist: torch-sparse>=0.6.18; extra == "gpu"
Requires-Dist: torch-cluster>=1.6.3; extra == "gpu"
Requires-Dist: torch-geometric>=2.4.0; extra == "gpu"
Provides-Extra: dev
Requires-Dist: pytest>=8.3.4; extra == "dev"
Requires-Dist: pytest-asyncio>=0.23.5; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Requires-Dist: pytest-mock>=3.12.0; extra == "dev"
Requires-Dist: pytest-xdist>=3.5.0; extra == "dev"
Requires-Dist: pytest-benchmark>=4.0.0; extra == "dev"
Requires-Dist: pytest-timeout>=2.2.0; extra == "dev"
Requires-Dist: black>=24.1.0; extra == "dev"
Requires-Dist: flake8>=7.0.0; extra == "dev"
Requires-Dist: mypy>=1.8.0; extra == "dev"
Requires-Dist: isort>=5.13.0; extra == "dev"
Requires-Dist: pre-commit>=3.6.0; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=7.2.6; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=2.0.0; extra == "docs"
Requires-Dist: sphinx-autodoc-typehints>=2.0.1; (python_version >= "3.12" and python_version < "3.13") and extra == "docs"
Requires-Dist: nbsphinx>=0.9.3; extra == "docs"
Requires-Dist: pandoc>=2.3; extra == "docs"
Requires-Dist: typing-extensions>=4.9.0; extra == "docs"
Requires-Dist: docutils>=0.20.1; extra == "docs"
Requires-Dist: packaging>=23.2; extra == "docs"
Requires-Dist: furo>=2024.1.29; extra == "docs"
Requires-Dist: sphinx-copybutton>=0.5.2; extra == "docs"
Requires-Dist: myst-parser>=2.0.0; extra == "docs"
Requires-Dist: platformdirs>=4.2.0; extra == "docs"
Requires-Dist: sphinx-design>=0.5.0; extra == "docs"
Requires-Dist: sphinxcontrib-mermaid>=0.9.2; extra == "docs"
Requires-Dist: sphinx-tabs>=3.4.1; extra == "docs"
Requires-Dist: sphinx-togglebutton>=0.3.2; extra == "docs"
Requires-Dist: sphinx-favicon>=1.0.1; extra == "docs"
Requires-Dist: sphinx-sitemap>=2.5.1; extra == "docs"
Requires-Dist: sphinx-last-updated-by-git>=0.3.6; extra == "docs"
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# 🌍 memories-dev

<div align="center">


**Building the World's Memory for Artificial General Intelligence**

[![Documentation](https://img.shields.io/badge/docs-latest-brightgreen.svg)](https://memories-dev.readthedocs.io/index.html)
[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](LICENSE)
[![Python 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg)](https://www.python.org/downloads/)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Version](https://img.shields.io/badge/version-2.0.2-blue.svg)](https://github.com/Vortx-AI/memories-dev/releases/tag/v2.0.2)
[![Discord](https://img.shields.io/discord/1339432819784683522?color=7289da&label=Discord&logo=discord&logoColor=white)](https://discord.gg/tGCVySkX4d)

<a href="https://www.producthunt.com/posts/memories-dev?embed=true&utm_source=badge-featured&utm_medium=badge&utm_souce=badge-memories&#0045;dev" target="_blank"><img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=879661&theme=light&t=1739530783374" alt="memories&#0046;dev - Collective&#0032;AGI&#0032;Memory | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /></a>

</div>

> **"The framework that gives AI systems a memory of the physical world."**

## 🚀 What is memories-dev?

**memories-dev** is a groundbreaking Python framework that creates a collective memory system for AI by integrating satellite imagery, geospatial data, and environmental metrics with large language models. It provides foundation models with unprecedented contextual understanding of the physical world through a sophisticated Earth Memory system.

<div align="center">
  <img src="https://github.com/Vortx-AI/memories-dev/raw/main/docs/source/_static/architecture_overview.gif" alt="memories-dev Architecture" width="700px">
</div>


```mermaid
%%{init: {'theme': 'forest', 'themeVariables': { 'primaryColor': '#1f77b4', 'primaryTextColor': '#fff', 'primaryBorderColor': '#0d6efd', 'lineColor': '#3498db', 'secondaryColor': '#16a085', 'tertiaryColor': '#2980b9'}}}%%
graph TD
    classDef foundationModels fill:#3498db,stroke:#2980b9,stroke-width:2px,color:white,font-weight:bold
    classDef earthMemory fill:#16a085,stroke:#1abc9c,stroke-width:2px,color:white,font-weight:bold
    classDef contextNodes fill:#9b59b6,stroke:#8e44ad,stroke-width:2px,color:white
    classDef intelligenceNodes fill:#f39c12,stroke:#f1c40f,stroke-width:2px,color:white
    classDef memoryNode fill:#e74c3c,stroke:#c0392b,stroke-width:2px,color:white,font-weight:bold
    classDef appNode fill:#2c3e50,stroke:#34495e,stroke-width:2px,color:white,font-weight:bold
    
    A[🤖 Foundation Models] -->|Augmented with| B[🌍 Earth Memory]
    B -->|Provides| C[📍 Spatial Context]
    B -->|Provides| D[⏱️ Temporal Context]
    B -->|Provides| E[🌱 Environmental Context]
    C -->|Enables| F[📌 Location-Aware Intelligence]
    D -->|Enables| G[⏰ Time-Aware Intelligence]
    E -->|Enables| H[🌿 Environment-Aware Intelligence]
    F --> I[🧠 Collective AGI Memory]
    G --> I
    H --> I
    I -->|Powers| J[🚀 Next-Gen AI Applications]
    
    A:::foundationModels
    B:::earthMemory
    C:::contextNodes
    D:::contextNodes
    E:::contextNodes
    F:::intelligenceNodes
    G:::intelligenceNodes
    H:::intelligenceNodes
    I:::memoryNode
    J:::appNode

    linkStyle 0 stroke:#3498db,stroke-width:2px,stroke-dasharray: 5 5
    linkStyle 1,2,3 stroke:#16a085,stroke-width:2px
    linkStyle 4,5,6 stroke:#9b59b6,stroke-width:2px
```

## 🚀 What's New in Version 2.0.2

- **Enhanced Earth Memory Integration**: Seamless fusion of 15+ specialized analyzers for comprehensive environmental understanding
- **Temporal Analysis Engine**: Advanced historical change detection and future prediction capabilities
- **Asynchronous Processing Pipeline**: Parallel execution of multiple Earth Memory analyzers for 10x faster analysis
- **Vector-Based Memory Storage**: Efficient embedding and retrieval of complex multi-modal data
- **Comprehensive Scoring System**: Sophisticated algorithms for property evaluation across multiple dimensions
- **Multi-model Inference**: Compare results from multiple LLM providers
- **Streaming Responses**: Real-time streaming for all supported model providers
- **Memory Optimization**: Advanced memory usage with automatic tier balancing
- **Distributed Memory**: Support for distributed memory across multiple nodes

## 🌟 Why memories-dev?

### The Problem: AI Systems Lack Physical World Context

Current AI systems have limited understanding of the physical world:
- They can't access or interpret geospatial data effectively
- They lack temporal understanding of how places change over time
- They can't integrate environmental factors into their reasoning
- They have no memory of physical locations or their characteristics

### The Solution: Earth Memory Integration

memories-dev solves these problems by:
- Creating a sophisticated memory system that integrates 15+ specialized Earth analyzers
- Providing asynchronous parallel processing of multiple data sources
- Enabling temporal analysis for historical change detection and future prediction
- Implementing a tiered memory architecture for efficient data management
- Offering a comprehensive API for seamless integration with AI systems

## 💡 Key Features

### 1. Multi-Modal Earth Memory Integration

memories-dev creates a sophisticated memory system by fusing multiple data sources:

```mermaid
%%{init: {'theme': 'forest', 'themeVariables': { 'primaryColor': '#2c3e50', 'primaryTextColor': '#ecf0f1', 'primaryBorderColor': '#34495e', 'lineColor': '#3498db', 'secondaryColor': '#16a085', 'tertiaryColor': '#2980b9'}}}%%
graph LR
    classDef mainSystem fill:#2c3e50,stroke:#34495e,stroke-width:2px,color:white,font-weight:bold
    classDef satelliteData fill:#3498db,stroke:#2980b9,stroke-width:2px,color:white
    classDef vectorData fill:#9b59b6,stroke:#8e44ad,stroke-width:2px,color:white
    classDef environmentalData fill:#16a085,stroke:#1abc9c,stroke-width:2px,color:white
    classDef temporalData fill:#f39c12,stroke:#f1c40f,stroke-width:2px,color:white
    classDef climateData fill:#e74c3c,stroke:#c0392b,stroke-width:2px,color:white
    classDef urbanData fill:#1abc9c,stroke:#16a085,stroke-width:2px,color:white
    classDef dataSource fill:#7f8c8d,stroke:#95a5a6,stroke-width:1px,color:white
    
    A[🌍 Earth Memory System] --> B[🛰️ Satellite Imagery]
    A --> C[🗺️ Vector Geospatial Data]
    A --> D[🌱 Environmental Metrics]
    A --> E[⏱️ Temporal Analysis]
    A --> F[🌡️ Climate Data]
    A --> G[🏙️ Urban Development]
    
    B --> H[📡 Sentinel-2]
    B --> I[📡 Landsat]
    B --> J[🌐 Earth Engine]
    
    C --> K[🗺️ Overture Maps]
    C --> L[🗺️ OpenStreetMap]
    C --> M[🔄 WFS Services]
    
    D --> N[💨 Air Quality]
    D --> O[🦋 Biodiversity]
    D --> P[🔊 Noise Levels]
    D --> Q[☀️ Solar Potential]
    
    E --> R[📜 Historical Changes]
    E --> S[🔮 Future Predictions]
    
    F --> T[🌡️ Climate Data]
    F --> U[🌧️ Precipitation Patterns]
    F --> V[⚠️ Extreme Weather Risk]
    
    G --> W[🏢 Urban Density]
    G --> X[🛣️ Infrastructure]
    G --> Y[📋 Development Plans]
    
    A:::mainSystem
    B:::satelliteData
    C:::vectorData
    D:::environmentalData
    E:::temporalData
    F:::climateData
    G:::urbanData
    H:::dataSource
    I:::dataSource
    J:::dataSource
    K:::dataSource
    L:::dataSource
    M:::dataSource
    N:::dataSource
    O:::dataSource
    P:::dataSource
    Q:::dataSource
    R:::dataSource
    S:::dataSource
    T:::dataSource
    U:::dataSource
    V:::dataSource
    W:::dataSource
    X:::dataSource
    Y:::dataSource
    
    linkStyle 0,1,2,3,4,5 stroke-width:2px
    linkStyle 0 stroke:#3498db
    linkStyle 1 stroke:#9b59b6
    linkStyle 2 stroke:#16a085
    linkStyle 3 stroke:#f39c12
    linkStyle 4 stroke:#e74c3c
    linkStyle 5 stroke:#1abc9c
```

### 2. Specialized Earth Memory Analyzers

The framework includes 15+ specialized analyzers for extracting insights from Earth Memory:

```mermaid
%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#1e293b', 'primaryTextColor': '#f8fafc', 'primaryBorderColor': '#334155', 'lineColor': '#3b82f6', 'secondaryColor': '#10b981', 'tertiaryColor': '#6366f1'}}}%%
graph TD
    classDef mainSystem fill:#1e293b,stroke:#334155,stroke-width:2px,color:white,font-weight:bold
    classDef terrainAnalyzer fill:#3b82f6,stroke:#2563eb,stroke-width:2px,color:white,font-weight:bold
    classDef climateAnalyzer fill:#ef4444,stroke:#dc2626,stroke-width:2px,color:white,font-weight:bold
    classDef environmentalAnalyzer fill:#10b981,stroke:#059669,stroke-width:2px,color:white,font-weight:bold
    classDef landAnalyzer fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:white,font-weight:bold
    classDef waterAnalyzer fill:#0ea5e9,stroke:#0284c7,stroke-width:2px,color:white,font-weight:bold
    classDef geologicalAnalyzer fill:#f59e0b,stroke:#d97706,stroke-width:2px,color:white,font-weight:bold
    classDef urbanAnalyzer fill:#6366f1,stroke:#4f46e5,stroke-width:2px,color:white,font-weight:bold
    classDef bioAnalyzer fill:#84cc16,stroke:#65a30d,stroke-width:2px,color:white,font-weight:bold
    classDef airAnalyzer fill:#06b6d4,stroke:#0891b2,stroke-width:2px,color:white,font-weight:bold
    classDef noiseAnalyzer fill:#ec4899,stroke:#db2777,stroke-width:2px,color:white,font-weight:bold
    classDef solarAnalyzer fill:#eab308,stroke:#ca8a04,stroke-width:2px,color:white,font-weight:bold
    classDef walkAnalyzer fill:#14b8a6,stroke:#0d9488,stroke-width:2px,color:white,font-weight:bold
    classDef viewAnalyzer fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:white,font-weight:bold
    classDef microAnalyzer fill:#22c55e,stroke:#16a34a,stroke-width:2px,color:white,font-weight:bold
    classDef propertyAnalyzer fill:#f43f5e,stroke:#e11d48,stroke-width:2px,color:white,font-weight:bold
    classDef infraAnalyzer fill:#6366f1,stroke:#4f46e5,stroke-width:2px,color:white,font-weight:bold
    classDef subAnalyzer fill:#64748b,stroke:#475569,stroke-width:1px,color:white
    
    A[🧠 Earth Memory Analyzers] --> B[🏔️ TerrainAnalyzer]
    A --> C[🌡️ ClimateDataFetcher]
    A --> D[🌱 EnvironmentalImpactAnalyzer]
    A --> E[🏞️ LandUseClassifier]
    A --> F[💧 WaterResourceAnalyzer]
    A --> G[🪨 GeologicalDataFetcher]
    A --> H[🏙️ UrbanDevelopmentAnalyzer]
    A --> I[🦋 BiodiversityAnalyzer]
    A --> J[💨 AirQualityMonitor]
    A --> K[🔊 NoiseAnalyzer]
    A --> L[☀️ SolarPotentialCalculator]
    A --> M[🚶 WalkabilityAnalyzer]
    A --> N[👁️ ViewshedAnalyzer]
    A --> O[🌤️ MicroclimateAnalyzer]
    A --> P[💰 PropertyValuePredictor]
    A --> Q[🛣️ InfrastructureAnalyzer]
    
    B --> B1[📏 Elevation Analysis]
    B --> B2[📐 Slope Analysis]
    B --> B3[🧭 Aspect Analysis]
    B --> B4[⚠️ Landslide Risk]
    
    C --> C1[📈 Temperature Trends]
    C --> C2[🌧️ Precipitation Patterns]
    C --> C3[🔮 Climate Projections]
    C --> C4[🌪️ Extreme Weather Risk]
    
    F --> F1[🌊 Flood Risk Assessment]
    F --> F2[🧪 Water Quality Analysis]
    F --> F3[🏜️ Drought Risk Modeling]
    F --> F4[🏞️ Watershed Analysis]
    
    H --> H1[📊 Urban Growth Patterns]
    H --> H2[📋 Development Plans]
    H --> H3[🏗️ Infrastructure Analysis]
    H --> H4[🏢 Zoning Changes]
    
    A:::mainSystem
    B:::terrainAnalyzer
    C:::climateAnalyzer
    D:::environmentalAnalyzer
    E:::landAnalyzer
    F:::waterAnalyzer
    G:::geologicalAnalyzer
    H:::urbanAnalyzer
    I:::bioAnalyzer
    J:::airAnalyzer
    K:::noiseAnalyzer
    L:::solarAnalyzer
    M:::walkAnalyzer
    N:::viewAnalyzer
    O:::microAnalyzer
    P:::propertyAnalyzer
    Q:::infraAnalyzer
    
    B1:::subAnalyzer
    B2:::subAnalyzer
    B3:::subAnalyzer
    B4:::subAnalyzer
    C1:::subAnalyzer
    C2:::subAnalyzer
    C3:::subAnalyzer
    C4:::subAnalyzer
    F1:::subAnalyzer
    F2:::subAnalyzer
    F3:::subAnalyzer
    F4:::subAnalyzer
    H1:::subAnalyzer
    H2:::subAnalyzer
    H3:::subAnalyzer
    H4:::subAnalyzer
    
    linkStyle 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 stroke-width:2px,stroke-dasharray:5 5
```

### 3. Tiered Memory Architecture

Our sophisticated memory management system optimizes data storage and retrieval:

```python
from memories import MemoryStore, Config

# Configure tiered memory architecture
config = Config(
    storage_path="./data",
    hot_memory_size=50,    # MB - Fast access, frequently used data
    warm_memory_size=200,  # MB - Balanced storage for semi-active data
    cold_memory_size=1000  # MB - Efficient storage for historical data
)

# Initialize memory store with automatic tier management
memory_store = MemoryStore(config)

# Store data with explicit tier assignment
await memory_store.store(
    "property_analysis_37.7749_-122.4194",
    analysis_result,
    tier="hot",  # Options: "hot", "warm", "cold"
    metadata={
        "location": {"lat": 37.7749, "lon": -122.4194},
        "timestamp": "2025-02-15T10:30:00Z",
        "analysis_type": "comprehensive_property"
    }
)
```

### 4. Asynchronous Parallel Processing

The framework uses advanced asynchronous processing to fetch and analyze multiple data sources in parallel:

```python
async def _fetch_comprehensive_earth_data(
    self,
    location: Point,
    area: Polygon
) -> Dict[str, Any]:
    """Fetch comprehensive earth memory data for the property location."""
    tasks = [
        self._fetch_sentinel_data(location, area),
        self._fetch_overture_data(location, area),
        terrain_analyzer.analyze_terrain(area),
        climate_fetcher.get_climate_data(area),
        impact_analyzer.analyze_environmental_impact(area),
        water_analyzer.analyze_water_resources(area),
        geological_fetcher.get_geological_data(area),
        urban_analyzer.analyze_urban_development(area),
        biodiversity_analyzer.analyze_biodiversity(area),
        air_quality_monitor.get_air_quality(location),
        noise_analyzer.analyze_noise_levels(area),
        solar_calculator.calculate_solar_potential(area),
        walkability_analyzer.analyze_walkability(location)
    ]
    
    results = await asyncio.gather(*tasks)
    
    return {
        "sentinel_data": results[0],
        "overture_data": results[1],
        "terrain_data": results[2],
        "climate_data": results[3],
        "environmental_impact": results[4],
        "water_resources": results[5],
        "geological_data": results[6],
        "urban_development": results[7],
        "biodiversity": results[8],
        "air_quality": results[9],
        "noise_levels": results[10],
        "solar_potential": results[11],
        "walkability": results[12]
    }
```

### 5. Multi-Dimensional Property Analysis

Our `RealEstateAgent` example demonstrates how memories-dev enables sophisticated property analysis:

```python
async def _analyze_current_conditions(
    self,
    location: Point,
    area: Polygon,
    earth_data: Dict[str, Any]
) -> Dict[str, Any]:
    """Analyze current property conditions using earth memory data."""
    return {
        "environmental_quality": {
            "air_quality_index": earth_data["air_quality"]["aqi"],
            "noise_level_db": earth_data["noise_levels"]["average_db"],
            "green_space_ratio": earth_data["environmental_impact"]["green_space_ratio"],
            "biodiversity_score": earth_data["biodiversity"]["biodiversity_index"]
        },
        "natural_risks": {
            "flood_risk": earth_data["water_resources"]["flood_risk_score"],
            "earthquake_risk": earth_data["geological_data"]["seismic_risk_score"],
            "landslide_risk": earth_data["terrain_data"]["landslide_risk_score"],
            "subsidence_risk": earth_data["geological_data"]["subsidence_risk_score"]
        },
        "urban_features": {
            "walkability_score": earth_data["walkability"]["score"],
            "public_transport_access": earth_data["urban_development"]["transit_score"],
            "amenities_score": earth_data["overture_data"]["amenities_score"],
            "urban_density": earth_data["urban_development"]["density_score"]
        },
        "sustainability": {
            "solar_potential": earth_data["solar_potential"]["annual_kwh"],
            "green_building_score": earth_data["environmental_impact"]["building_sustainability"],
            "water_efficiency": earth_data["water_resources"]["efficiency_score"],
            "energy_efficiency": earth_data["environmental_impact"]["energy_efficiency"]
        },
        "climate_resilience": {
            "heat_island_effect": earth_data["climate_data"]["heat_island_intensity"],
            "cooling_demand": earth_data["climate_data"]["cooling_degree_days"],
            "storm_resilience": earth_data["climate_data"]["storm_risk_score"],
            "drought_risk": earth_data["water_resources"]["drought_risk_score"]
        }
    }
```

### 6. Temporal Analysis Engine

The framework includes sophisticated temporal analysis capabilities for understanding how places change over time:

```python
async def _analyze_historical_changes(
    self,
    location: Point,
    area: Polygon
) -> Dict[str, Any]:
    """Analyze historical changes in the area over the specified time period."""
    end_date = datetime.now()
    start_date = end_date - timedelta(days=365 * self.temporal_analysis_years)
    
    # Fetch historical satellite imagery
    historical_imagery = await sentinel_client.get_historical_imagery(
        area,
        start_date,
        end_date,
        max_cloud_cover=20
    )
    
    # Analyze changes
    land_use_changes = await land_use_classifier.analyze_changes(historical_imagery)
    urban_development_changes = await urban_analyzer.analyze_historical_changes(area, start_date, end_date)
    environmental_changes = await impact_analyzer.analyze_historical_impact(area, start_date, end_date)
    climate_changes = await climate_fetcher.get_historical_trends(area, start_date, end_date)
    
    return {
        "land_use_changes": land_use_changes,
        "urban_development": urban_development_changes,
        "environmental_impact": environmental_changes,
        "climate_trends": climate_changes
    }
```

## 🏗️ Quick Start

```bash
# Install the framework with all dependencies
pip install memories-dev[all]

# Set up environment variables for Earth Memory access
export OVERTURE_API_KEY=your_api_key
export SENTINEL_USER=your_username
export SENTINEL_PASSWORD=your_password

# Run the Real Estate Agent example
python examples/real_estate_agent.py
```

## 🌐 Real-World Applications

memories-dev powers sophisticated AI applications with deep contextual understanding:

### 1. Real Estate Intelligence

Our `RealEstateAgent` class demonstrates comprehensive property analysis using Earth Memory:

```mermaid
%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#0f172a', 'primaryTextColor': '#f8fafc', 'primaryBorderColor': '#1e293b', 'lineColor': '#3b82f6', 'secondaryColor': '#10b981', 'tertiaryColor': '#6366f1'}}}%%
graph TD
    classDef inputData fill:#3b82f6,stroke:#2563eb,stroke-width:2px,color:white,font-weight:bold
    classDef memorySystem fill:#10b981,stroke:#059669,stroke-width:2px,color:white,font-weight:bold
    classDef agent fill:#6366f1,stroke:#4f46e5,stroke-width:2px,color:white,font-weight:bold
    classDef analysis fill:#0f172a,stroke:#1e293b,stroke-width:2px,color:white
    classDef environmental fill:#22c55e,stroke:#16a34a,stroke-width:2px,color:white
    classDef risks fill:#ef4444,stroke:#dc2626,stroke-width:2px,color:white
    classDef urban fill:#8b5cf6,stroke:#7c3aed,stroke-width:2px,color:white
    classDef sustainability fill:#10b981,stroke:#059669,stroke-width:2px,color:white
    classDef climate fill:#0ea5e9,stroke:#0284c7,stroke-width:2px,color:white
    classDef historical fill:#f59e0b,stroke:#d97706,stroke-width:2px,color:white
    classDef future fill:#ec4899,stroke:#db2777,stroke-width:2px,color:white
    classDef scores fill:#f43f5e,stroke:#e11d48,stroke-width:2px,color:white
    classDef metrics fill:#64748b,stroke:#475569,stroke-width:1px,color:white
    
    A[📊 Property Data] -->|Input| B[🏠 RealEstateAgent]
    C[🌍 Earth Memory System] -->|13 Specialized Analyzers| B
    B -->|Asynchronous Analysis| D[🔍 Comprehensive Property Analysis]
    
    D -->|Output| E[🌿 Environmental Quality]
    E -->|Metrics| E1[💨 Air Quality Index]
    E -->|Metrics| E2[🔊 Noise Levels]
    E -->|Metrics| E3[🌳 Green Space Ratio]
    E -->|Metrics| E4[🦋 Biodiversity Score]
    
    D -->|Output| F[⚠️ Natural Risks]
    F -->|Metrics| F1[🌊 Flood Risk]
    F -->|Metrics| F2[🌋 Earthquake Risk]
    F -->|Metrics| F3[⛰️ Landslide Risk]
    F -->|Metrics| F4[🕳️ Subsidence Risk]
    
    D -->|Output| G[🏙️ Urban Features]
    G -->|Metrics| G1[🚶 Walkability Score]
    G -->|Metrics| G2[🚇 Public Transport Access]
    G -->|Metrics| G3[🏬 Amenities Score]
    G -->|Metrics| G4[🏢 Urban Density]
    
    D -->|Output| H[♻️ Sustainability]
    H -->|Metrics| H1[☀️ Solar Potential]
    H -->|Metrics| H2[🏗️ Green Building Score]
    H -->|Metrics| H3[💧 Water Efficiency]
    H -->|Metrics| H4[⚡ Energy Efficiency]
    
    D -->|Output| I[🌡️ Climate Resilience]
    I -->|Metrics| I1[🔥 Heat Island Effect]
    I -->|Metrics| I2[❄️ Cooling Demand]
    I -->|Metrics| I3[🌪️ Storm Resilience]
    I -->|Metrics| I4[🏜️ Drought Risk]
    
    B -->|Temporal Analysis| J[📜 Historical Changes]
    J -->|Analysis| J1[🏞️ Land Use Changes]
    J -->|Analysis| J2[🏗️ Urban Development]
    J -->|Analysis| J3[🌱 Environmental Impact]
    J -->|Analysis| J4[🌡️ Climate Trends]
    
    B -->|Predictive Analysis| K[🔮 Future Predictions]
    K -->|Predictions| K1[🏙️ Urban Development]
    K -->|Predictions| K2[🌿 Environmental Changes]
    K -->|Predictions| K3[🌡️ Climate Projections]
    K -->|Predictions| K4[♻️ Sustainability Outlook]
    
    B -->|Multi-Dimensional Scoring| L[⭐ Property Scores]
    L -->|Score| L1[🏆 Overall Score]
    L -->|Score| L2[♻️ Sustainability Score]
    L -->|Score| L3[🏡 Livability Score]
    L -->|Score| L4[💰 Investment Score]
    L -->|Score| L5[🛡️ Resilience Score]
    
    A:::inputData
    B:::agent
    C:::memorySystem
    D:::analysis
    E:::environmental
    F:::risks
    G:::urban
    H:::sustainability
    I:::climate
    J:::historical
    K:::future
    L:::scores
    
    E1:::metrics
    E2:::metrics
    E3:::metrics
    E4:::metrics
    F1:::metrics
    F2:::metrics
    F3:::metrics
    F4:::metrics
    G1:::metrics
    G2:::metrics
    G3:::metrics
    G4:::metrics
    H1:::metrics
    H2:::metrics
    H3:::metrics
    H4:::metrics
    I1:::metrics
    I2:::metrics
    I3:::metrics
    I4:::metrics
    J1:::metrics
    J2:::metrics
    J3:::metrics
    J4:::metrics
    K1:::metrics
    K2:::metrics
    K3:::metrics
    K4:::metrics
    L1:::metrics
    L2:::metrics
    L3:::metrics
    L4:::metrics
    L5:::metrics
    
    linkStyle 0,1 stroke-width:2px,stroke:#3b82f6
    linkStyle 2 stroke-width:2px,stroke:#6366f1
    linkStyle 3,8,13,18,23 stroke-width:2px,stroke:#0f172a
    linkStyle 28,33,38 stroke-width:2px,stroke:#6366f1,stroke-dasharray:5 5
```

### 2. Property Analyzer

The `PropertyAnalyzer` class provides even more detailed analysis with specialized components:

```python
# Example usage
analyzer = PropertyAnalyzer(
    memory_store=memory_store,
    analysis_radius_meters=2000,
    temporal_analysis_years=10,
    prediction_horizon_years=10
)

# Analyze property at specific coordinates
analysis = await analyzer.analyze_property(
    lat=37.7749,
    lon=-122.4194,
    property_data={
        "property_type": "residential",
        "year_built": 2015,
        "square_feet": 1200
    }
)

# Access comprehensive analysis results
terrain_analysis = analysis["terrain_analysis"]
water_analysis = analysis["water_analysis"]
geological_analysis = analysis["geological_analysis"]
environmental_analysis = analysis["environmental_analysis"]
risk_assessment = analysis["risk_assessment"]
value_analysis = analysis["value_analysis"]
recommendations = analysis["recommendations"]


```

## 📅 Release Timeline

- **v1.0.0** - Released on February 14, 2025: Initial stable release with core functionality
- **v2.0.2** - Released on February 25, 2025: Current version with enhanced features

## 🔮 Future Roadmap

```mermaid
%%{init: {'theme': 'default', 'themeVariables': { 'primaryColor': '#0f172a', 'primaryTextColor': '#f8fafc', 'primaryBorderColor': '#1e293b', 'lineColor': '#3b82f6', 'secondaryColor': '#10b981', 'tertiaryColor': '#6366f1'}}}%%
gantt
    title memories-dev Development Roadmap
    dateFormat  YYYY-MM-DD
    axisFormat %b %Y
    todayMarker off
    
    section Core Features
    Enhanced Vector Store Integration    :done, 2025-01-01, 2025-02-14
    Multi-modal Memory Management        :active, 2025-02-15, 2025-04-30
    Distributed Memory Architecture      :2025-05-01, 2025-07-31
    
    section Earth Memory
    Advanced Satellite Integration       :done, 2025-01-01, 2025-02-14
    Real-time Environmental Monitoring   :active, 2025-02-15, 2025-05-31
    Climate Prediction Models            :2025-06-01, 2025-08-31
    
    section AI Capabilities
    Memory-Augmented Reasoning           :active, 2025-02-15, 2025-04-30
    Multi-agent Memory Sharing           :2025-05-01, 2025-07-31
    Causal Inference Engine              :2025-08-01, 2025-10-31
```

## 📚 Documentation

- [Getting Started Guide](docs/getting_started.md)
- [API Reference](docs/api_reference.md)
- [Earth Memory Integration](docs/earth_memory.md)
- [Example Applications](examples/README.md)
- [Advanced Features](docs/advanced_features.md)

## ⚙️ System Requirements

- Python 3.9+
- 16GB RAM (32GB+ recommended for production)
- NVIDIA GPU with 8GB+ VRAM (recommended)
- Internet connection for Earth Memory APIs
- API keys for Overture Maps and Sentinel data

## 🤝 Contributing

We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.

## 📜 License

This project is licensed under the Apache 2.0 License - see the [LICENSE](LICENSE) file for details.

## 🆘 Support

- [Issue Tracker](https://github.com/Vortx-AI/memories-dev/issues)
- [Documentation](docs/)
- [Community Forum](https://forum.memories-dev.com)
- [Discord Community](https://discord.gg/tGCVySkX4d)

<p align="center">
<img src="docs/source/_static/hero_image.png" alt="memories-dev Earth Memory System" width="400px">
  <br>
  <b>Building the World's Memory for Artificial General Intelligence</b>
  <br>
  <br>
  Built with 💜 by the memories-dev team
</p>
