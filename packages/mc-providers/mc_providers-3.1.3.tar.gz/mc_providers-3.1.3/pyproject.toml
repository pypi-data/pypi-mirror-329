[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "mc-providers"
version = "3.1.3"
authors = [
    {name = "Paige Gulley", email = "nano3.14@gmail.com"},
    {name = "Rahul Bhargava", email = "r.bhargava@northeastern.edu"},
]
description = "Search Providers package for Mediacloud"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "python-dateutil == 2.*",
    "ciso8601==2.2.*",
    "dateparser",
    "requests",
    "wayback-news-search == 1.*",
    "fasttext == 0.9.*",
    "mediacloud-metadata >= 1.0.0",
    "mediacloud == 4.*",
    "elasticsearch == 8.17.*", # keep in sync w/ ES major version?
    "elasticsearch-dsl == 8.17.*", # keep in sync w/ ES major version!
    "sigfig == 1.1.*",
    "spacy == 3.8.*",
    "statsd_client == 1.0.*",
]

[project.optional-dependencies]
# for pre-commit hook (and "make lint")
# additional packages for mypy belong in pre-commit secion below
dev = [
    "pre-commit",
    "python-dotenv",
    "pytest"
]

# dependencies for mypy (not in user venv):
# .pre-commit-config.yaml uses .pre-commit-run.sh
# to (re)install these in the pre-commit PRIVATE venv
# if this file has changed.
pre-commit = [
  "types-dateparser ~=1.2.0.20250208",
  "types-requests ~=2.32.0.20241016",
]

[tool.flit.sdist]
include = ["mc_providers/*.py","mc_providers/language/*.py", "mc_providers/language/*.bin", "mc_providers/language/*.txt" ]

[tool.flit.module]
name = "mc_providers"

[tool.mypy]

# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

# look for local stubs to PyPI packages in top level stubs directory
mypy_path = "stubs"
