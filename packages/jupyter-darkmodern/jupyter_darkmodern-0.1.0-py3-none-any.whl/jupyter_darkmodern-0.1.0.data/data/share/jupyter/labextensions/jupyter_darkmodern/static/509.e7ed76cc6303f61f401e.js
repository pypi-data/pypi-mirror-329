"use strict";(self.webpackChunkjupyter_darkmodern=self.webpackChunkjupyter_darkmodern||[]).push([[509],{509:(e,o,t)=>{t.r(o),t.d(o,{default:()=>d});var r=t(209),n=t(593);const l={id:"jupyter_darkmodern:plugin",description:"A JupyterLab theme to visually match VSCode's Dark Modern theme.",autoStart:!0,requires:[r.IThemeManager],optional:[n.ISettingRegistry],activate:(e,o,t)=>{console.log("JupyterLab extension jupyter_darkmodern is activated!"),o.register({name:"Jupyter Dark Modern",isLight:!1,load:()=>o.loadCSS("jupyter_darkmodern/index.css"),unload:()=>Promise.resolve(void 0)}),t&&t.load(l.id).then((e=>{console.log("jupyter_darkmodern settings loaded:",e.composite)})).catch((e=>{console.error("Failed to load settings for jupyter_darkmodern.",e)}));const r=()=>{const e=document.querySelectorAll(".jp-RenderedText[data-mime-type='application/vnd.jupyter.stderr'] .ansi-bold");console.log(`Found ${e.length} elements`),e.forEach((function(e){const o=e;console.log(`Element color before: ${o.style.color}`),"rgb(0,0,255)"===o.style.color&&(o.style.color="rgb(255,0,0)",console.log(`Element color after: ${o.style.color}`))}))};r(),new MutationObserver(r).observe(document.body,{childList:!0,subtree:!0})}},d=l}}]);