Metadata-Version: 2.2
Name: tinyprogress
Version: 1.1.0
Summary: A lightweight progress bar for Python without dependencies.
Home-page: https://github.com/croketillo/tinyprogress
Author: Croketillo
Author-email: croketillo@gmail.com
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-python
Dynamic: summary

![GitHub License](https://img.shields.io/github/license/croketillo/tinyprogress)
![GitHub file size in bytes](https://img.shields.io/github/size/croketillo/tinyprogress/tinyprogress/tinyprogress.py)
![PyPI - Version](https://img.shields.io/pypi/v/tinyprogress)
![PyPI - Downloads](https://img.shields.io/pypi/dm/tinyprogress)
![Pepy Total Downloads](https://img.shields.io/pepy/dt/tinyprogress)

# TinyProgress

**TinyProgress** is a minimal and lightweight progress bar module for Python. It provides an easy way to track progress in loops and iterables without requiring external dependencies.

![Barra de progreso](images/barra.gif)

## ðŸš€ Features
- âœ… Simple and lightweight (no external dependencies)
- âœ… Customizable progress bar length and characters
- âœ… Supports named tasks
- âœ… Works with any iterable

## ðŸ“¦ Installation
Since TinyProgress is a single-file module, you can simply copy `tinyprogress.py` into your project.

Alternatively, install it via pip (once published to PyPI):
```sh
pip install tinyprogress
```

## ðŸ›  Usage
### Basic Progress Bar
```python
from tinyprogress import progress
import time

for i in progress(range(100)):
    time.sleep(0.05)  # Simulating work
```

### Custom Progress Bar Length
```python
for i in progress(range(100), bar_length=50):
    time.sleep(0.05)
```

### Named Task Progress Bar
```python
for i in progress(range(100), task_name="Downloading"):
    time.sleep(0.05)
```

### Using Custom Characters
```python
for i in progress(range(100), fill_char='#', empty_char='-'):
    time.sleep(0.05)
```

## ðŸ“œ License
GNU General Public License v3, see LICENSE file.
