Metadata-Version: 2.2
Name: dbautomodel
Version: 0.0.1
Summary: lib for auto model sql queries
Home-page: https://github.com/Myshica/dbautomodel
Author: Aero
Author-email: email@example.com
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-python
Dynamic: summary

# dbautomodel

lib for auto model sql queries


Example:
```
import asyncio
from dbautomodel.module import DatabaseSqliteAPI


async def main():
    queries = [
        "CREATE TABLE users (user_id INTEGER PRIMARY KEY, name TEXT, email TEXT)",
        "CREATE TABLE messages (id INTEGER PRIMARY KEY, user_id INTEGER, message TEXT)"
    ]
    db = DatabaseSqliteAPI("./db.db", first_queries=queries)

    for user in await db.gets("users"):
        print(user.user_id)
        print(user.name)
        print(user.email)

    for message in await db.gets("messages"):
        print(message.id)
        print(message.user_id)
        print(message.message)


asyncio.run(main())
```

