name: Continuous Integration / Deployment

on:
  # Run on any pull request
  pull_request:

jobs:
  run_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install requirements
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install -e .
      - name: Initialise Kortical Package / CLI
        run: |
          source venv/bin/activate
          kortical config init -q
          echo "Configuring system_url"
          kortical config set system_url <placeholder_if_you_see_this_did_you_setup_the_git_hooks>
          echo "Configuring credentials"
          kortical config credentials from_string -q ${{ secrets.KORTICAL_CREDENTIALS }}
          kortical project select <placeholder_if_you_see_this_did_you_setup_the_git_hooks>
      - name: Create Challenger Environment
        run: |
          eval $(ssh-agent)
          # Add a private key if you need to. eg: to access a private git repo with pip
          # ssh-add ~/.ssh/id_rsa
          source venv/bin/activate
          # We run unit tests before creating a challenger environment, so fast tests run quickly allowing for faster error discovery
          echo "Creating challenger environment [github_${{ github.run_id }}]"
          # kortical_component_config is updated via pre-commit hook

          # Create challenger database/environment
          python local/create_challenger.py github${{ github.run_id }} <placeholder_if_you_see_this_did_you_setup_the_git_hooks> "config/component_config.yml"
          kortical environment select github${{ github.run_id }}

          kortical app deploy --all
          kortical environment wait-for-components
      - name: Run API Tests
        run: |
          source venv/bin/activate
          pytest -m "api"
      - name: Save component config file with known good versions
        run: |
          source venv/bin/activate
          kortical component save-config "config/component_config.yml"
      - name: Commit components config file with known good versions
        uses: test-room-7/action-update-file@v1
        with:
          file-path: config/component_config.yml
          commit-msg: Update kortical components file
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
      - name: App Logs
        if: always()
        run: |
          source venv/bin/activate
          for i in k8s/*.yml; do
            APP_NAME=`basename ${i%%.*}`
            echo "Getting component version ID for app [$APP_NAME]"
            kortical component logs $APP_NAME
          done
      - name: Delete Challenger Environment
        if: always()
        run: |
          source venv/bin/activate
          python local/delete_challenger.py github${{ github.run_id }}
