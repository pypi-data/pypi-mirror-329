io = pyimport "io"

.__stdin__: io.TextIOWrapper!
.__stdout__: io.TextIOWrapper!
.__stderr__: io.TextIOWrapper!
.abiflags: Str
.api_version: Nat
.argv: [Str; _]
.base_exec_prefix: Str
.base_prefix: Str
.builtin_module_names: [Str; _]
.byteorder: Str
.dont_write_bytecode: Bool
.dllhandle: Int
.copyright: Str
.exec_prefix: Str
.executable: Str
.flags: NamedTuple {
    .debug = Nat;
    .inspect = Nat;
    .interactive = Nat;
    .optimize = Nat;
    .dont_write_bytecode = Nat;
    .no_user_site = Nat;
    .no_site = Nat;
    .ignore_environment = Nat;
    .verbose = Nat;
    .bytes_warning = Nat;
    .quiet = Nat;
    .hash_randomization = Nat;
    .isolated = Nat;
    .dev_mode = Nat;
    .utf8_mode = Nat;
    .warn_default_encoding = Nat;
    .safe_path = Bool;
    .int_max_str_digits = Int;
}
.float_indo: NamedTuple {
    .max = Float;
    .max_exp = Nat;
    .max_10_exp = Nat;
    .min = Float;
    .min_exp = Int;
    .min_10_exp = Int;
    .dig = Nat;
    .mant_dig = Nat;
    .epsilon = Float;
    .radix = Nat;
    .rounds = Nat;
}
.float_repr_style: Str
.hash_info: NamedTuple {
    .width = Nat;
    .modulus = Int;
    .inf = Int;
    .nan = Int;
    .imag = Int;
    .algorithm = Str;
    .hash_bits = Nat;
    .seed_bits = Nat;
    .cutoff = Int;
}
.hexversion: Nat
.int_info: NamedTuple {
    .bits_per_digit = Nat;
    .sizeof_digit = Nat;
    .default_max_str_digits = Nat;
    .str_dights_check_threshold = Nat;
}
.implementation: NamedTuple {
    .name = Str;
    .cache_tag = Str;
    # TODO: version_info
    .version = Obj;
    .hexversion = Nat;
    ._multiarch = Str;
}
.maxsize: Nat
.maxunicode: Nat
.meta_path: List!(Str, _)
.modules: Dict!({Str: Module})
.path: List!(Str, _)
'''
* AIX -> 'aix'
* FreeBSD -> 'freebsd'
* Emscripten -> 'emscripten'
* Linux -> 'linux'
* WASI -> 'wasi'
* Windows -> 'win32'
* Windows/Cygwin -> 'cygwin'
* macOS -> 'darwin'
'''
.platform: Str
.platlibdir: Str
.prefix: Str
.ps1: Str!
.ps2: Str!
.pycache_prefix: Str
.stderr: io.TextIOWrapper!
.stdin: io.TextIOWrapper!
.stdout: io.TextIOWrapper!
.stdlib_module_names: [Str; _]
.version: Str
.version_info: NamedTuple {
    .major = Nat;
    .minor = Nat;
    .micro = Nat;
    .releaselevel = Str;
    .serial = Nat;
}

._clear_type_cache!: () => NoneType
._current_frames!: () => {Int: Frame}
.addaudithook!: (hook: (Str, *Obj) => NoneType) => NoneType
.audit!: (event: Str, *args: Obj) => NoneType
.breakpointhook!: () => NoneType
.displayhook!: (value: Obj) => NoneType
.exception!: () => Exception or NoneType
.exc_info!: () => (Type or NoneType, Exception or NoneType, Traceback or NoneType)
.exit: Obj -> Never
.getdefaultencoding!: () => Str
.getrecursionlimit!: () => Nat
.getrefcount!: (obj: Obj) => Nat
.getsizeof: (obj: Obj) -> Nat
.getswitchinterval!: () => Float
.intern: (string: Str) -> Str
.is_finalizing!: () => Bool
.setrecursionlimit!: Nat => NoneType
