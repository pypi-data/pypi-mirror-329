.sep: Str
.supports_unicode_filenames: Bool

.abspath!: (path: PathLike,) => Str
.basename!: (path: PathLike,) => Str
.commonpath!: (paths: Sequence(PathLike)) => Str
.commonprefix!: (list: Sequence(PathLike)) => Str
.dirname!: (path: PathLike,) => Str
.exists!: (path: PathLike,) => Bool
.lexists!: (path: PathLike,) => Bool
.expanduser!: (path: PathLike,) => Str
.expandvars!: (path: PathLike,) => Str
.getatime!: (path: PathLike,) => Float
.getmtime!: (path: PathLike,) => Float
.getctime!: (path: PathLike,) => Float
.getsize!: (path: PathLike,) => Int
.isabs!: (path: PathLike,) => Bool
.isfile!: (path: PathLike,) => Bool
.isdir!: (path: PathLike,) => Bool
.isjunction!: (path: PathLike,) => Bool
.islink!: (path: PathLike,) => Bool
.ismount!: (path: PathLike,) => Bool
.isdevdrive!: (path: PathLike,) => Bool
.join: (path: PathLike, *paths: PathLike) -> Str
.normcase: (path: PathLike,) -> Str
.normpath: (path: PathLike,) -> Str
.realpath!: (path: PathLike, strict := Bool) => Str
.relpath: (path: PathLike, start := PathLike) -> Str
.samefile!: (path1: PathLike, path2: PathLike) => Bool
.sameopenfile!: (fp1: FileDescriptor or Nat or PathLike, fp2: FileDescriptor or Nat or PathLike) => Bool
# TODO: StatResult
.samestat!: (st1: Obj, st2: Obj) => Bool
.split: (path: PathLike,) -> (Str, Str)
.splitdrive: (path: PathLike,) -> (Str, Str)
.splitroot: (path: PathLike,) -> (Str, Str, Str)
.splitext: (path: PathLike,) -> (Str, Str)
