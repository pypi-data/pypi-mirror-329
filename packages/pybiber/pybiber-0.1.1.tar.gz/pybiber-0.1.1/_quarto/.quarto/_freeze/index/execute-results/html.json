{
  "hash": "55d5028679335b1893b47c1ea283f406",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: pybiber\n---\n\n\n\nThe pybiber package aggregates [the lexicogrammatical and functional features](feature-categories.qmd) described by Biber [-@biber1988variation] and widely used for text-type, register, and genre classification tasks.\n\nThe package uses [spaCy](https://spacy.io/models){.external target=\"_blank\"} part-of-speech tagging and dependency parsing to summarize and aggregate patterns.\n\nBecause feature extraction builds from the outputs of probabilistic taggers, the accuracy of the resulting counts are reliant on the accuracy of those models. Thus, texts with irregular spellings, non-normative punctuation, etc. will likely produce unreliable outputs, unless taggers are tuned specifically for those purposes.\n\n\n---\n\nAll DataFrames are rendered using [polars](https://docs.pola.rs/api/python/stable/reference/index.html){.external target=\"_blank\"}. If you prefer to conduct any post-processing using pandas, please refer to [the documentation](https://docs.pola.rs/api/python/stable/reference/dataframe/api/polars.DataFrame.to_pandas.html){.external target=\"_blank\"} for converting polars to pandas. Note that conversion requires both pandas and pyarrow to be installed into your working environment.\n\nSee [pseudobibeR](https://cran.r-project.org/web/packages/pseudobibeR/index.html){.external target=\"_blank\"} for the R implementation.\n\n---\n\n## Installation\n\nYou can install the released version of pybiber from [PyPI](https://pypi.org/project/pybiber/){.external target=\"_blank\"}:\n\n```bash\npip install pybiber\n```\n\nInstall a [spaCy model](https://spacy.io/usage){.external target=\"_blank\"}:\n\n```bash\npython -m spacy download en_core_web_sm\n\n# models can also be installed using pip\n# pip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.8.0/en_core_web_sm-3.8.0-py3-none-any.whl\n```\n\n## Usage\n\nTo use the pybiber package, you must first import [spaCy](https://spacy.io/models){.external target=\"_blank\"} and initiate an instance. You will also need to create a corpus. The [](`~pybiber.biber`) function expects a [polars DataFrame](https://docs.pola.rs/api/python/stable/reference/dataframe/index.html){.external target=\"_blank\"} with a `doc_id` column and a `text` column. This follows the convention for [`readtext`](https://readtext.quanteda.io/articles/readtext_vignette.html){.external target=\"_blank\"} and corpus processing using [quanteda](https://quanteda.io/){.external target=\"_blank\"} in R.\n\n::: {#392dd12c .cell execution_count=1}\n``` {.python .cell-code}\nimport spacy\nimport pybiber as pb\nfrom pybiber.data import micusp_mini\n```\n:::\n\n\nYou can see the simple data structure of a corpus:\n\n::: {#634890f8 .cell execution_count=2}\n``` {.python .cell-code}\nmicusp_mini.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (5, 2)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>doc_id</th><th>text</th></tr><tr><td>str</td><td>str</td></tr></thead><tbody><tr><td>&quot;BIO_G0_02_1&quot;</td><td>&quot;Ernst Mayr once wrote, &quot;sympat…</td></tr><tr><td>&quot;BIO_G0_03_1&quot;</td><td>&quot;The ability of a species to co…</td></tr><tr><td>&quot;BIO_G0_06_1&quot;</td><td>&quot;Generally, females make a larg…</td></tr><tr><td>&quot;BIO_G0_12_1&quot;</td><td>&quot;In the field of plant biology,…</td></tr><tr><td>&quot;BIO_G0_21_1&quot;</td><td>&quot;Parasites in nonhuman animals …</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {.callout-tip}\n## Building your own corpus\n\nTo build your own corpus, a good place to start is [](`~pybiber.parse_utils.corpus_from_folder`), which reads in all of the text files from a directory.\n:::\n\n### Initiate an instance\n\nThe pybiber package requires a model that will carry out part-of-speech tagging and [dependency parsing](https://spacy.io/usage/linguistic-features){.external target=\"_blank\"}, like one of spaCy's `en_core` models.\n\n::: {#d14ff83e .cell execution_count=3}\n``` {.python .cell-code}\nnlp = spacy.load(\"en_core_web_sm\", disable=[\"ner\"])\n```\n:::\n\n\n::: {.callout-note}\nHere we are disabling `ner` or \"Named Entity Recognition\" from the pipeline to increase processing speed, but doing so is not necessary.\n:::\n\n### Process the corpus\n\nTo process the corpus, use [](`~pybiber.parse_utils.spacy_parse`). Processing the `micusp_mini` corpus should take between 20-30 seconds.\n\n::: {#00ca33c4 .cell execution_count=4}\n``` {.python .cell-code}\ndf_spacy = pb.spacy_parse(micusp_mini, nlp)\n```\n:::\n\n\nThe function returns a DataFrame, which is structured like a [spacyr](https://cran.r-project.org/web/packages/spacyr/vignettes/using_spacyr.html){.external target=\"_blank\"} output.\n\n::: {#463d3cd7 .cell execution_count=5}\n``` {.python .cell-code}\ndf_spacy.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (5, 9)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>doc_id</th><th>sentence_id</th><th>token_id</th><th>token</th><th>lemma</th><th>pos</th><th>tag</th><th>head_token_id</th><th>dep_rel</th></tr><tr><td>str</td><td>u32</td><td>i64</td><td>str</td><td>str</td><td>str</td><td>str</td><td>i64</td><td>str</td></tr></thead><tbody><tr><td>&quot;BIO_G0_02_1&quot;</td><td>1</td><td>0</td><td>&quot;Ernst&quot;</td><td>&quot;Ernst&quot;</td><td>&quot;PROPN&quot;</td><td>&quot;NNP&quot;</td><td>1</td><td>&quot;compound&quot;</td></tr><tr><td>&quot;BIO_G0_02_1&quot;</td><td>1</td><td>1</td><td>&quot;Mayr&quot;</td><td>&quot;Mayr&quot;</td><td>&quot;PROPN&quot;</td><td>&quot;NNP&quot;</td><td>3</td><td>&quot;nsubj&quot;</td></tr><tr><td>&quot;BIO_G0_02_1&quot;</td><td>1</td><td>2</td><td>&quot;once&quot;</td><td>&quot;once&quot;</td><td>&quot;ADV&quot;</td><td>&quot;RB&quot;</td><td>3</td><td>&quot;advmod&quot;</td></tr><tr><td>&quot;BIO_G0_02_1&quot;</td><td>1</td><td>3</td><td>&quot;wrote&quot;</td><td>&quot;write&quot;</td><td>&quot;VERB&quot;</td><td>&quot;VBD&quot;</td><td>3</td><td>&quot;ROOT&quot;</td></tr><tr><td>&quot;BIO_G0_02_1&quot;</td><td>1</td><td>4</td><td>&quot;,&quot;</td><td>&quot;,&quot;</td><td>&quot;PUNCT&quot;</td><td>&quot;,&quot;</td><td>8</td><td>&quot;punct&quot;</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n### Aggregate features\n\nAfter parsing the corpus, features can then be aggregated using [](`~pybiber.parse_functions.biber`).\n\n::: {#8d4c81b6 .cell execution_count=6}\n``` {.python .cell-code}\ndf_biber = pb.biber(df_spacy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUsing MATTR for f_43_type_token\n\nAll features normalized per 1000 tokens except:\nf_43_type_token and f_44_mean_word_length\n\n```\n:::\n:::\n\n\n::: {.callout-important}\n## Feature counts\n\nIn the [documentation](`~pybiber.parse_functions.biber`), note the difference beween type-token ratio (TTR) and moving average type-token ration (MATTR). For most use-cases, forcing TTR is unnecessary, but when comparing multiple corpora that haven't been processed together, it is important to make sure the same measure is being used.\n\nAlso, the default is to normalize frequencies per 1000 tokens. However, absolute frequencies can be returned by setting `normalize=False`.\n:::\n\nThe resulting document-feature matrix has 67 variables and a column of document ids.\n\n::: {#a0ee53c2 .cell execution_count=7}\n``` {.python .cell-code}\ndf_biber.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n(170, 68)\n```\n:::\n:::\n\n\n::: {.callout-tip}\n\nEncoding metadata into your document id's (i.e., file names) is key to further processing and analysis. In the `micusp_mini` data, for example, the first three letters before the underscore represent an academic discipline (e.g., BIO for biology, ENG for English, etc.).\n:::\n\n::: {#e6b19f8f .cell execution_count=8}\n``` {.python .cell-code}\ndf_biber.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (5, 68)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>doc_id</th><th>f_01_past_tense</th><th>f_02_perfect_aspect</th><th>f_03_present_tense</th><th>f_04_place_adverbials</th><th>f_05_time_adverbials</th><th>f_06_first_person_pronouns</th><th>f_07_second_person_pronouns</th><th>f_08_third_person_pronouns</th><th>f_09_pronoun_it</th><th>f_10_demonstrative_pronoun</th><th>f_11_indefinite_pronouns</th><th>f_12_proverb_do</th><th>f_13_wh_question</th><th>f_14_nominalizations</th><th>f_15_gerunds</th><th>f_16_other_nouns</th><th>f_17_agentless_passives</th><th>f_18_by_passives</th><th>f_19_be_main_verb</th><th>f_20_existential_there</th><th>f_21_that_verb_comp</th><th>f_22_that_adj_comp</th><th>f_23_wh_clause</th><th>f_24_infinitives</th><th>f_25_present_participle</th><th>f_26_past_participle</th><th>f_27_past_participle_whiz</th><th>f_28_present_participle_whiz</th><th>f_29_that_subj</th><th>f_30_that_obj</th><th>f_31_wh_subj</th><th>f_32_wh_obj</th><th>f_33_pied_piping</th><th>f_34_sentence_relatives</th><th>f_35_because</th><th>f_36_though</th><th>f_37_if</th><th>f_38_other_adv_sub</th><th>f_39_prepositions</th><th>f_40_adj_attr</th><th>f_41_adj_pred</th><th>f_42_adverbs</th><th>f_43_type_token</th><th>f_44_mean_word_length</th><th>f_45_conjuncts</th><th>f_46_downtoners</th><th>f_47_hedges</th><th>f_48_amplifiers</th><th>f_49_emphatics</th><th>f_50_discourse_particles</th><th>f_51_demonstratives</th><th>f_52_modal_possibility</th><th>f_53_modal_necessity</th><th>f_54_modal_predictive</th><th>f_55_verb_public</th><th>f_56_verb_private</th><th>f_57_verb_suasive</th><th>f_58_verb_seem</th><th>f_59_contractions</th><th>f_60_that_deletion</th><th>f_61_stranded_preposition</th><th>f_62_split_infinitive</th><th>f_63_split_auxiliary</th><th>f_64_phrasal_coordination</th><th>f_65_clausal_coordination</th><th>f_66_neg_synthetic</th><th>f_67_neg_analytic</th></tr><tr><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>&quot;BIO_G0_02_1&quot;</td><td>11.574886</td><td>9.821115</td><td>61.381971</td><td>2.104525</td><td>6.313574</td><td>2.104525</td><td>0.701508</td><td>17.537706</td><td>7.716591</td><td>2.806033</td><td>0.0</td><td>1.753771</td><td>0.350754</td><td>37.881445</td><td>6.313574</td><td>284.110838</td><td>9.821115</td><td>3.156787</td><td>16.485444</td><td>0.701508</td><td>10.17187</td><td>0.0</td><td>0.701508</td><td>13.328657</td><td>4.209049</td><td>0.0</td><td>5.96282</td><td>2.104525</td><td>1.753771</td><td>0.350754</td><td>1.052262</td><td>0.0</td><td>0.350754</td><td>0.701508</td><td>0.0</td><td>0.701508</td><td>0.350754</td><td>4.209049</td><td>99.263416</td><td>86.285514</td><td>6.664328</td><td>62.434234</td><td>0.742811</td><td>5.3012</td><td>9.821115</td><td>3.507541</td><td>0.0</td><td>2.455279</td><td>5.261312</td><td>0.0</td><td>19.291477</td><td>7.015082</td><td>0.350754</td><td>4.209049</td><td>6.664328</td><td>22.448264</td><td>4.559804</td><td>2.806033</td><td>0.350754</td><td>0.0</td><td>0.0</td><td>0.701508</td><td>4.910558</td><td>6.664328</td><td>4.209049</td><td>1.403016</td><td>2.806033</td></tr><tr><td>&quot;BIO_G0_03_1&quot;</td><td>20.300088</td><td>3.53045</td><td>59.13504</td><td>1.765225</td><td>0.882613</td><td>18.534863</td><td>0.0</td><td>3.53045</td><td>16.769638</td><td>4.413063</td><td>0.0</td><td>1.765225</td><td>0.0</td><td>43.248014</td><td>0.882613</td><td>235.657546</td><td>2.647838</td><td>1.765225</td><td>44.130627</td><td>3.53045</td><td>7.0609</td><td>3.53045</td><td>1.765225</td><td>20.300088</td><td>0.882613</td><td>0.0</td><td>0.882613</td><td>0.882613</td><td>2.647838</td><td>0.0</td><td>5.295675</td><td>0.882613</td><td>2.647838</td><td>4.413063</td><td>1.765225</td><td>1.765225</td><td>3.53045</td><td>4.413063</td><td>120.917917</td><td>85.613416</td><td>13.239188</td><td>47.661077</td><td>0.700499</td><td>5.152406</td><td>3.53045</td><td>1.765225</td><td>0.0</td><td>0.882613</td><td>6.178288</td><td>0.0</td><td>7.0609</td><td>7.0609</td><td>0.0</td><td>8.826125</td><td>1.765225</td><td>8.826125</td><td>3.53045</td><td>1.765225</td><td>0.0</td><td>0.0</td><td>0.882613</td><td>0.0</td><td>0.882613</td><td>7.943513</td><td>2.647838</td><td>0.882613</td><td>7.0609</td></tr><tr><td>&quot;BIO_G0_06_1&quot;</td><td>9.480034</td><td>2.585464</td><td>52.5711</td><td>0.861821</td><td>0.287274</td><td>0.0</td><td>0.0</td><td>14.076415</td><td>5.745475</td><td>0.287274</td><td>0.287274</td><td>0.287274</td><td>1.149095</td><td>20.970985</td><td>1.436369</td><td>288.997415</td><td>11.490951</td><td>2.872738</td><td>37.920138</td><td>2.010916</td><td>4.883654</td><td>0.574548</td><td>0.574548</td><td>16.374605</td><td>3.160011</td><td>0.287274</td><td>0.574548</td><td>2.010916</td><td>2.872738</td><td>0.0</td><td>1.149095</td><td>0.0</td><td>0.287274</td><td>3.734559</td><td>3.734559</td><td>1.149095</td><td>5.745475</td><td>2.585464</td><td>106.291296</td><td>81.873025</td><td>15.512784</td><td>67.79661</td><td>0.665338</td><td>5.156845</td><td>8.618213</td><td>2.29819</td><td>0.574548</td><td>2.29819</td><td>6.894571</td><td>0.0</td><td>4.883654</td><td>16.949153</td><td>1.723643</td><td>7.181844</td><td>4.021833</td><td>8.330939</td><td>4.309107</td><td>2.29819</td><td>0.0</td><td>0.0</td><td>0.287274</td><td>1.723643</td><td>6.320023</td><td>10.054582</td><td>5.458202</td><td>0.574548</td><td>8.905487</td></tr><tr><td>&quot;BIO_G0_12_1&quot;</td><td>36.900369</td><td>2.767528</td><td>23.98524</td><td>1.845018</td><td>1.845018</td><td>0.0</td><td>0.0</td><td>3.690037</td><td>11.99262</td><td>0.922509</td><td>0.0</td><td>0.922509</td><td>0.0</td><td>21.217712</td><td>0.0</td><td>298.892989</td><td>31.365314</td><td>5.535055</td><td>20.295203</td><td>2.767528</td><td>4.612546</td><td>3.690037</td><td>0.922509</td><td>11.99262</td><td>1.845018</td><td>0.0</td><td>12.915129</td><td>2.767528</td><td>4.612546</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.922509</td><td>0.0</td><td>0.922509</td><td>0.0</td><td>10.147601</td><td>154.059041</td><td>51.660517</td><td>9.225092</td><td>33.210332</td><td>0.625839</td><td>5.160681</td><td>6.457565</td><td>0.0</td><td>0.0</td><td>0.0</td><td>5.535055</td><td>0.0</td><td>14.760148</td><td>10.147601</td><td>0.0</td><td>8.302583</td><td>1.845018</td><td>15.682657</td><td>4.612546</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.922509</td><td>2.767528</td><td>0.922509</td><td>1.845018</td><td>1.845018</td><td>5.535055</td></tr><tr><td>&quot;BIO_G0_21_1&quot;</td><td>40.050858</td><td>2.542912</td><td>26.700572</td><td>2.542912</td><td>0.635728</td><td>0.635728</td><td>0.0</td><td>7.628735</td><td>2.542912</td><td>4.450095</td><td>0.0</td><td>1.271456</td><td>0.0</td><td>26.064844</td><td>3.17864</td><td>336.300064</td><td>21.614749</td><td>2.542912</td><td>27.3363</td><td>3.17864</td><td>2.542912</td><td>0.635728</td><td>0.0</td><td>9.535919</td><td>0.635728</td><td>0.0</td><td>5.085823</td><td>1.907184</td><td>3.814367</td><td>0.0</td><td>1.271456</td><td>0.0</td><td>0.0</td><td>3.17864</td><td>0.635728</td><td>0.0</td><td>0.635728</td><td>3.17864</td><td>147.488875</td><td>52.765416</td><td>8.900191</td><td>40.050858</td><td>0.665966</td><td>5.129435</td><td>5.085823</td><td>1.907184</td><td>0.0</td><td>0.635728</td><td>8.264463</td><td>0.0</td><td>5.721551</td><td>3.814367</td><td>2.542912</td><td>1.907184</td><td>2.542912</td><td>10.807374</td><td>5.721551</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>3.17864</td><td>7.628735</td><td>6.993007</td><td>2.542912</td><td>2.542912</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}