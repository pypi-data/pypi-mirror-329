{"title":"Get started","markdown":{"yaml":{"title":"Get started","jupyter":"python3"},"headingText":"Preparing a corpus","containsRefs":false,"markdown":"\n\nProcessing a corpus using the pybiber package involves the following steps:\n\n1. Preparing a corpus of text data.\n2. Initiating a model instance.\n3. Parsing the corpus data.\n4. Extracting the features into DataFrame.\n\nAfter the document-feature matrix has been produced, it can be used for further analysis like classification tasks [e.g., @reinhart2024llms]. Additionally, the pybiber package contains functions for carrying Biber's Mulit-Dimensional Analysis [@biber1985investigating], which is a specific implementation of exploratory factor analysis. Refer to the [Biber analyzer](biber-analyzer.qmd ) documentation.\n\n\nFirst we will import our libraries:\n\n```{python}\nimport spacy\nimport pybiber as pb\nimport polars as pl\n```\n\nThere are a variety of ways of preparing and reading in a corpus for processing. The [](`~pybiber.parse_utils.spacy_parse`) function requires polars DataFrame with a `doc_id` and a `text` column. Such a DataFrame can be prepared ahead of time and read in using one of polars [input functions](https://docs.pola.rs/api/python/dev/reference/io.html). For example, the [Human-AI Parallel corpus mini](https://huggingface.co/datasets/browndw/human-ai-parallel-corpus-mini){.external target=\"_blank\"} can be read directly from huggingface:\n\n```{python}\ndf = pl.read_parquet('hf://datasets/browndw/human-ai-parallel-corpus-mini/hape_mini-text.parquet')\ndf.head()\n```\n\nAlternatively, a corpus of plain text files can be stored in a directory. All of the files can, then, be read into a DataFrame using [](`~pybiber.parse_utils.corpus_from_folder`)\n\nHere, we will use the MICUSP mini data:\n\n```{python}\nfrom pybiber.data import micusp_mini\n```\n\n## Initiate a spaCy instance\n\nInitiate a model instance:\n\n```{python}\nnlp = spacy.load(\"en_core_web_sm\", disable=[\"ner\"])\n```\n\n::: {.callout-important}\n## Model requirements\n\nA spaCy model must be installed in your working enviroment using `python -m spacy download en_core_web_sm` or an alternative. See information about [spaCy models](https://spacy.io/usage){.external target=\"_blank\"}. Also, the pybiber package requires a model that will execute both part-of-speech tagging and dependency parsing.\n:::\n\n## Parse the text data\n\nTo process the corpus, use [](`~pybiber.parse_utils.spacy_parse`). Processing the `micusp_mini` corpus should take between 20-30 seconds.\n\n```{python}\ndf_spacy = pb.spacy_parse(corp=micusp_mini, nlp_model=nlp)\n```\n\n::: {.callout-note}\nThe number of cores assigned can be specified using `n_process`, which can increase processing speed. The batch size can also be adjusted with `batch_size`. However, larger batch sizes may actually slow down processessing.\n:::\n\n## Extract the features\n\nAfter parsing the corpus, features can then be aggregated using [](`~pybiber.parse_functions.biber`).\n\n```{python}\ndf_biber = pb.biber(df_spacy)\n```\n\nTo return absolute frequencies set `normalize=False`.\n\n```{python}\ndf_biber.head()\n```\n\n","srcMarkdownNoYaml":"\n\nProcessing a corpus using the pybiber package involves the following steps:\n\n1. Preparing a corpus of text data.\n2. Initiating a model instance.\n3. Parsing the corpus data.\n4. Extracting the features into DataFrame.\n\nAfter the document-feature matrix has been produced, it can be used for further analysis like classification tasks [e.g., @reinhart2024llms]. Additionally, the pybiber package contains functions for carrying Biber's Mulit-Dimensional Analysis [@biber1985investigating], which is a specific implementation of exploratory factor analysis. Refer to the [Biber analyzer](biber-analyzer.qmd ) documentation.\n\n## Preparing a corpus\n\nFirst we will import our libraries:\n\n```{python}\nimport spacy\nimport pybiber as pb\nimport polars as pl\n```\n\nThere are a variety of ways of preparing and reading in a corpus for processing. The [](`~pybiber.parse_utils.spacy_parse`) function requires polars DataFrame with a `doc_id` and a `text` column. Such a DataFrame can be prepared ahead of time and read in using one of polars [input functions](https://docs.pola.rs/api/python/dev/reference/io.html). For example, the [Human-AI Parallel corpus mini](https://huggingface.co/datasets/browndw/human-ai-parallel-corpus-mini){.external target=\"_blank\"} can be read directly from huggingface:\n\n```{python}\ndf = pl.read_parquet('hf://datasets/browndw/human-ai-parallel-corpus-mini/hape_mini-text.parquet')\ndf.head()\n```\n\nAlternatively, a corpus of plain text files can be stored in a directory. All of the files can, then, be read into a DataFrame using [](`~pybiber.parse_utils.corpus_from_folder`)\n\nHere, we will use the MICUSP mini data:\n\n```{python}\nfrom pybiber.data import micusp_mini\n```\n\n## Initiate a spaCy instance\n\nInitiate a model instance:\n\n```{python}\nnlp = spacy.load(\"en_core_web_sm\", disable=[\"ner\"])\n```\n\n::: {.callout-important}\n## Model requirements\n\nA spaCy model must be installed in your working enviroment using `python -m spacy download en_core_web_sm` or an alternative. See information about [spaCy models](https://spacy.io/usage){.external target=\"_blank\"}. Also, the pybiber package requires a model that will execute both part-of-speech tagging and dependency parsing.\n:::\n\n## Parse the text data\n\nTo process the corpus, use [](`~pybiber.parse_utils.spacy_parse`). Processing the `micusp_mini` corpus should take between 20-30 seconds.\n\n```{python}\ndf_spacy = pb.spacy_parse(corp=micusp_mini, nlp_model=nlp)\n```\n\n::: {.callout-note}\nThe number of cores assigned can be specified using `n_process`, which can increase processing speed. The batch size can also be adjusted with `batch_size`. However, larger batch sizes may actually slow down processessing.\n:::\n\n## Extract the features\n\nAfter parsing the corpus, features can then be aggregated using [](`~pybiber.parse_functions.biber`).\n\n```{python}\ndf_biber = pb.biber(df_spacy)\n```\n\nTo return absolute frequencies set `normalize=False`.\n\n```{python}\ndf_biber.head()\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["interlinks"],"output-file":"get-started.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","bibliography":["references.bib"],"quartodoc":{"title":"Reference","package":"pybiber","sections":[{"title":"pybiber utility functions","desc":"Read in and prepare data","package":"pybiber.parse_utils","contents":["corpus_from_folder","get_text_paths","readtext","spacy_parse","get_noun_phrases"]},{"title":"pybiber parse","desc":"Generate a biber document-feature matrix","package":"pybiber.parse_functions","contents":["biber"]},{"title":"pybiber methods","desc":"Analyze a biber document-feature matrix","package":"pybiber.BiberAnalyzer","contents":["mda","pca","mdaviz_screeplot","mdaviz_groupmeans","pcaviz_groupmeans","pcaviz_contrib"]}]},"interlinks":{"sources":{}},"sidebar":false,"title":"Get started","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}