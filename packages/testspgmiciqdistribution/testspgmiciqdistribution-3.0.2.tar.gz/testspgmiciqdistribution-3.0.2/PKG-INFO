Metadata-Version: 2.1
Name: testspgmiciqdistribution
Version: 3.0.2
Summary: SPGMICIQ is an API Client for the S&P Capital IQ API
Keywords: SPGI,S&P Capital IQ API,S&P Global,CIQAPI,S&P Market Intelligence,SDK,Financials,MarketData,CorporateData,ESG Scores
Author: SPGMICIQ
Author-email: gds_python_sdk_support@spglobal.com
Requires-Python: >=3.9.0,<4.0.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: IPython (>=8.0,<9.0)
Requires-Dist: Jinja2 (>=3.1.5,<4.0.0)
Requires-Dist: pandas (>=1.1.5)
Requires-Dist: requests (>=2.0,<3.0)
Description-Content-Type: text/markdown

# SPGMI CIQ Python Library

The Python Software Development Kit (SDK) makes REST API integration into your Python environment easier, allowing less technical and experienced Python users to start utilizing REST APIs sooner.

S&P Capital API clients can now access these SDKs to integrate end-of-day and time-series Financial and Market data such as Income Sheet, Balance Sheets, pricing, and dividend information data points from the S&P Capital IQ API into their Python workflows.

 The SDK seamlessly integrates with pandas DataFrames, providing a Jupyter-friendly environment and a simpler, optimized data analysis experience.

## Features

Integrate high-quality data with your systems, portals, and business applications, including:
1. Analysts looking to receive income statement, balance sheet, and cash flow values for backtesting models.
2. Basic automation of desktop/Excel-based modeling when the Excel template reaches its limit.
3. Time-series pricing and market data values as well as dividend information.
4. Detailed Environmental, Social, and Governance (ESG) scores and metrics, supporting sustainability and ethical assessments.
5. Corporate data insights, including company status, industry classifications, and more.

## Benefits
1. Output generated in a reusable/extendible object such as a DataFrame, facilitating easy data processing and analysis.
2. Ease of authentication, request, and response handling.
3. Ability to use proxy objects for enhanced network communication.
4. Access to comprehensive financial, market, corporate, and ESG data for holistic analysis.
5. Efficient automation of financial modeling and analysis previously reliant on Excel-based workflows.

## Installation

Thank you for your interest in our library on PYPI. Please be aware that the version of the library available here is a placeholder/dummy version intended for demonstration purposes only.

To obtain an actual version of the Python SDK library for installation or further support, please visit the [S&P Global Support Center](https://www.support.marketplace.spglobal.com/en/delivery-resources#sec6). Note that login credentials must be created on the support center to access the content.

Our team will be happy to assist you and provide guidance based on your needs.

## Setting up the library
Using the below code, you can make the necessary import and set up the required instance to use the Python library.

```sh
from spgmi_api_sdk.ciq.services import SDKDataServices

spg = SDKDataServices(username, password)
```

## Fetching Financial Data
Our financial data service provides a number of functionalities enabling you to retrieve point-in-time and historical financial data including income statements, balance sheets, cash flow statements, and other financial metrics essential for comprehensive financial analysis.

### 1. get_income_statement_pit
Fetches income statement data for a given point in time.
```sh
spg.get_income_statement_pit(identifiers=["I_US5949181045","2588173","EG1320"],properties={"asOfDate": "12/31/2020", "currencyId": "USD","currencyConversionModeId": "HISTORICAL"})
```

### 2. get_income_statement_historical
Fetches historical income statement data.
```sh
spg.get_income_statement_historical(identifiers=["GV012141","MSFT:NasdaqGS"], properties={"periodType":"IQ_FQ-4"})
```

### 3. get_balance_sheet_pit
Fetches balance sheet data for a given point in time.
```sh
spg.get_balance_sheet_pit(identifiers=["RX309198","MMM:"], properties={"asOfDate": "12/31/2020", "currencyId": "USD","currencyConversionModeId": "HISTORICAL"})
```
### 4. get_balance_sheet_historical
Fetches historical balance sheet data.
```sh
spg.get_balance_sheet_historical(identifiers=["I_US5949181045","2588173"], properties={"periodType":"IQ_FQ-2"})
```

### 5. get_cash_flow_pit
Fetches cash flow data for a given point in time.
```sh
spg.get_cash_flow_pit(identifiers=["2588173","EG1320"], properties={"asOfDate": "12/31/2020", "currencyId": "USD","currencyConversionModeId": "HISTORICAL"})
```

### 6. get_cash_flow_historical
Fetches historical cash flow data.
```sh
spg.get_cash_flow_historical(identifiers=["MSFT:NasdaqGS","DB649496569"], properties={"asOfDate": "12/31/2020", "currencyId": "USD","currencyConversionModeId": "HISTORICAL"})
```

### 7. get_financials_pit
Fetches financial data (income statement, balance sheet, cash flow) for a given point in time based on specified mnemonics. This function will accept a maximum of 10 mnemonics.
```sh
spg.get_financials_pit(identifiers=["I_US5949181045","2588173","EG1320","CSP_594918104","IQT2630413","GV012141","MSFT:NasdaqGS","DB649496569","RX309198"], mnemonics=["IQ_CASH_INVEST_NAME_AP"], properties={"asOfDate": "12/31/2020", "currencyId": "USD","currencyConversionModeId": "HISTORICAL"})

```
### 8. get_financials_historical
Fetches historical financial data based on specified mnemonics. This function will accept a maximum of 10 mnemonics.
```sh
spg.get_financials_historical(identifiers=["I_US5949181045","2588173","EG1320","CSP_594918104","IQT2630413","GV012141","MSFT:NasdaqGS","DB649496569","RX309198"], mnemonics=["IQ_CASH_INVEST_NAME_AP"], properties={"asOfDate": "12/31/2020", "currencyId": "USD","currencyConversionModeId": "HISTORICAL"})
```

### 8. get_financials
Fetches financial highlights, including key metrics for comprehensive analysis.
```sh
spg.get_financials(identifiers=["IQ21835","IQ26642","MSFT"], period_type="IQ_FY-1")
```

## Fetching MarketData
Our market data service provides several functionalities enabling you to access end-of-day and time-series market data, including stock prices, trading volumes, dividend information, and other market-related information crucial for analysis and decision-making.

### 1. get_pricing_info_pit
Fetches pricing information for a given point in time.
```sh
spg.get_pricing_info_pit(identifiers=["I_US5949181045","2588173","EG1320","CSP_594918104","IQT2630413"], properties={}) 
```

### 2. get_pricing_info_time_series
Fetches historical pricing information over a specified time period. 
```sh
spg.get_pricing_info_time_series(identifiers=["CSP_594918104","IQT2630413","GV012141","MSFT:NasdaqGS","DB649496569","RX309198","MMM:"], properties={}) 
display(response)
```

### 3. get_dividend_info_pit
Fetches dividend information for a given point in time. 
```sh
spg.get_dividend_info_pit(identifiers=["CSP_594918104","IQT2630413","GV012141","MSFT:NasdaqGS"], properties={}) 
```

### 4. get_dividend_info_time_series
Fetches historical dividend information over a specified time period 
```sh
spg.get_dividend_info_time_series(identifiers=["GV012141","MSFT:NasdaqGS","DB649496569","RX309198","MMM:"], properties={}) 
```

### 5. get_market_info_pit
Fetches market information for a given point in time. 
```sh
spg.get_market_info_pit(identifiers=["IQT2630413","GV012141","MSFT:NasdaqGS","DB649496569","RX309198"], properties={}) 
```
### 6. get_market_info_time_series
Fetches historical market information over a specified time period.
```sh 
spg.get_market_info_time_series(identifiers=["AAPL:"], properties={}) 
```

### 6. get_market_data
Fetches various market data metrics such as closing price, VWAP, open price, day high/low, and others.
```sh 
spg.get_market_data(identifiers=["IQ112350","MSFT","IQ24937"])
```

## Fetching CorporateData
Our corporate data service provides functionalities to retrieve a wide range of corporate information, including company status, industry classifications, IPO Date, Industry Details and more.

### 1. get_corporate_data
Fetches corporate data metrics such as company status, industry classification, incorporation date, and more.
```sh 
spg.get_corporate_data(identifiers=["IQ112350","SPGI","IQ24937"])
```

## Fetching ESG Scores
Our ESG Scores service provides functionalities to retrieve  detailed Environmental, Social, and Governance (ESG) scores.

### 1. get_esg_scores
Fetches comprehensive ESG data, including environmental, social, and governance scores, along with associated metrics such as carbon emissions, human rights, business ethics, and more.
```sh 
spg.get_esg_scores(identifiers=["SNL4202062", "RX309198"],assessment_year= ["2022","2023"])
```
## Fetching Multiples
Our Multiples Service empowers you with key financial metrics to evaluate a company's valuation relative to its earnings, revenue, and other critical financial indicators. These insights help investors, analysts, and decision-makers make informed financial assessments with ease.

### 1. get_multiples
Fetches key valuation multiples such as P/E Ratio, Price/Book, TEV/EBITDA, and more—providing a clear picture of a company’s market standing.
```sh 
spg.get_multiples(identifiers=["SNL4004214","MSFT"])
```
## Fetching RiskGauge Scores
Our RiskGauge Score Service provides a comprehensive assessment of a company's credit risk by leveraging key risk indicators. These scores help investors, lenders, and risk managers evaluate financial stability with greater accuracy.

### 1. get_risk_gauge_score
Fetches fetches comprehensive credit risk scores, including standalone, sovereign-capped, and parental/government support-adjusted ratings for specified companies.
```sh 
spg.get_risk_gauge_score(identifiers=["IQ112350", "MSFT", "IQ24937","NVDA","SNL4094286","SNL"])
```

## Fetching Estimates
Our Estimates service provides forward-looking financial projections, helping you assess a company's expected performance across key financial metrics like earnings, revenue, and EBITDA.

### 1. get_estimates
Fetches analysts' estimates for earnings, revenue, and EBITDA over different periods, offering valuable insights into future financial performance.
```sh 
spg.get_estimates(identifiers=["IQ112350", "MSFT", "IQ24937","NVDA","SNL4094286","SNL"])
```

The response includes key metrics such as:

1. Analyst Recommendations & Target Price – Consensus ratings and projected stock price.
2. Valuation Multiples – P/E, P/BV, PEG, and TEV/EBIT ratios.
3. Forward-Looking Estimates – Earnings Per Share (EPS), Revenue, and EBITDA across different forecast periods (IQ_FQ, IQ_FQ+1, IQ_FY, IQ_FY+1, IQ_NTM).

## Fetching Transactions
Our Transactions service provides a detailed view of corporate transactions, including mergers, acquisitions, public offerings, and buybacks. This data helps you track deal activity and assess a company’s strategic moves.

### 1. get_transactions
Retrieves a list of recent corporate transactions along with key details such as transaction type, value, and dates.
```sh 
spg.get_transactions(identifiers=["IQ112350","IQ162270","MSFT","sadfa","IQ32307","IQ32307","NVDA","SNL4094286"])
```
The response includes:

1. Transaction List – A ranked list of recent transactions.
2. Transaction Type – Classification such as Mergers, Buybacks, Public Offerings, or Private Placements.
3. Deal Resolution – Summary of the transaction details.
4. Transaction Value – Monetary worth of the deal.
5. Announcement & Completion Dates – Key dates marking the transaction timeline.

This dataset provides deep insights into a company’s corporate actions, helping you analyze market trends and investment opportunities effectively.

## Fetching StockPrices
Our Get StockPrices service offers one-year historical data for given CIQ IDs, SNL IDs, or stock tickers. This data allows you to analyze the performance of stocks over an entire year, track price trends, assess volatility, and understand market movements at both macro and micro levels.

### 1. get_stock_price
Retrieves one year of historical stock prices along with essential details such as open, close, high, low prices, and volume for a given identifiers.
```sh 
spg.get_stock_price(identifiers=["IQ112350", "MSFT", "IQ24937"])
```

## Fetching AgencyRatings
Our Agency Ratings service provides a detailed view of credit ratings issued by major credit rating agencies, including S&P, Moody's, and Fitch. This data helps you track the creditworthiness of companies and assess financial risk through issuer credit ratings, outlooks, and credit watch statuses.

### 1. get_agency_ratings
Retrieves the latest credit ratings and outlooks for companies or entities.
```sh 
spg.get_agency_ratings(identifiers=["IQ112350", "IQ24937"])
```

## Fetching Latest Activity
Our Latest Activity service provides a comprehensive overview of the most recent corporate activities, including top documents, past and upcoming events, and key developments. This dataset offers valuable insights into a company’s strategic moves, ensuring you stay ahead of market trends.

### 1. get_latest_activity
Fetch the most recent documents, historical and future events, and key developments for companies.
```sh 
response_list=spg.get_latest_activity(identifiers=["IQ112350", "IQ24937"])
documents,events,key_devs = response_list
display(documents,events,key_devs)
```

The response dataframe includes:
1. Documents (Top 10 Most Recent): A ranked list of recently published reports, filings, and transcripts for the company.
2. Events (Top 3 Historical & Top 3 Future): A timeline of major corporate events, such as earnings calls, investor conferences, and financial disclosures.
3. Key Developments (Top 5 Major Corporate Announcements & Strategic Initiatives): A summary of the most important announcements, collaborations, acquisitions, and business updates.

## Company Name Search 
Our Company Name Search service allow you to fetch Capital IQ ID or MI Institution ID based on the company names.

### 1. get_company_name_to_id
Fetches Capital IQ IDs or MI Institution IDs for a list of given company names, helping in identifying companies by their recognized identifiers.
```sh 
spg.get_company_name_to_id(companies=["Coca Cola", "Meezan Bank Limited (MEBL)"])
``` 
## Using a Proxy with SDKDataServices (Optional)
If your environment requires a proxy for API requests, you can configure it using SDKProxy when initializing SDKDataServices.
```sh
from spgmi_api_sdk.ciq.services import SDKDataServices, SDKProxy
sdk_proxy_object = SDKProxy(proxy_username="", proxy_password="", proxy_host=None, proxy_port=None, proxy_domain="")
spg = SDKDataServices(username="your_api_username", password="your_api_password", proxy=sdk_proxy)
```
Note: If you don't need a proxy, simply pass None or omit the proxy argument when initializing SDKDataServices.

## Additional Resources
For more information on our Python SDK, please visit the [S&P Global Support Center](https://www.support.marketplace.spglobal.com/en/delivery-resources#sec6). This resource requires you to create login credentials.

On the support center, you can download the Python SDK and obtain additional resources, including a detailed CIQ Python SDK User Guide, to support your use of this offering.



