Metadata-Version: 2.2
Name: dima-sdk
Version: 2.0.4
Summary: Deel REST API
Home-page: 
Author: Deel API Team
Author-email: apiteam@deel.com
Keywords: Deel REST API
Description-Content-Type: text/markdown
Requires-Dist: urllib3<3.0.0,>=1.25.3
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: pydantic>=2
Requires-Dist: typing-extensions>=4.7.1
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: requires-dist
Dynamic: summary

# dima-sdk
Deel REST API

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.25.0
- Package version: 2.0.4
- Generator version: 7.11.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.8+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import dima_sdk
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import dima_sdk
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import dima_sdk
from dima_sdk.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://api.letsdeel.com/rest/v2
# See configuration.py for a list of all supported configuration parameters.
configuration = dima_sdk.Configuration(
    host = "https://api.letsdeel.com/rest/v2"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure Bearer authorization (JWT): deelToken
configuration = dima_sdk.Configuration(
    access_token = os.environ["BEARER_TOKEN"]
)

configuration.access_token = os.environ["ACCESS_TOKEN"]


# Enter a context with an instance of the API client
with dima_sdk.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = dima_sdk.PeopleApi(api_client)

    try:
        # Get my current personal profile
        api_response = api_instance.get_people()
        print("The response of PeopleApi->get_people:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling PeopleApi->get_people: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *https://api.letsdeel.com/rest/v2*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*PeopleApi* | [**get_people**](docs/PeopleApi.md#get_people) | **GET** /people/me | Get my current personal profile
*PeopleApi* | [**get_people_list**](docs/PeopleApi.md#get_people_list) | **GET** /people | List of people


## Documentation For Models

 - [ApiError](docs/ApiError.md)
 - [ApiErrorContainer](docs/ApiErrorContainer.md)
 - [ApiErrorRequest](docs/ApiErrorRequest.md)
 - [GetPeople200Response](docs/GetPeople200Response.md)
 - [GetPeopleList200Response](docs/GetPeopleList200Response.md)
 - [GetPeopleList200ResponseDataInner](docs/GetPeopleList200ResponseDataInner.md)
 - [GetPeopleList200ResponseDataInnerAddressesInner](docs/GetPeopleList200ResponseDataInnerAddressesInner.md)
 - [GetPeopleList200ResponseDataInnerDepartment](docs/GetPeopleList200ResponseDataInnerDepartment.md)
 - [GetPeopleList200ResponseDataInnerDirectManager](docs/GetPeopleList200ResponseDataInnerDirectManager.md)
 - [GetPeopleList200ResponseDataInnerDirectReportsInner](docs/GetPeopleList200ResponseDataInnerDirectReportsInner.md)
 - [GetPeopleList200ResponseDataInnerEmailsInner](docs/GetPeopleList200ResponseDataInnerEmailsInner.md)
 - [GetPeopleList200ResponseDataInnerEmploymentsInner](docs/GetPeopleList200ResponseDataInnerEmploymentsInner.md)
 - [GetPeopleList200ResponseDataInnerEmploymentsInnerClientLegalEntity](docs/GetPeopleList200ResponseDataInnerEmploymentsInnerClientLegalEntity.md)
 - [GetPeopleList200ResponseDataInnerEmploymentsInnerPayment](docs/GetPeopleList200ResponseDataInnerEmploymentsInnerPayment.md)
 - [GetPeopleList200ResponseDataInnerEmploymentsInnerTeam](docs/GetPeopleList200ResponseDataInnerEmploymentsInnerTeam.md)
 - [GetPeopleList200ResponsePage](docs/GetPeopleList200ResponsePage.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="deelToken"></a>
### deelToken

- **Type**: Bearer authentication (JWT)

<a id="oauth2"></a>
### oauth2

- **Type**: OAuth
- **Flow**: accessCode
- **Authorization URL**: https://auth.deel.com/authorize
- **Scopes**: 
 - **accounting:read**: View payments and invoices in your organization.
 - **accounting:write**: Create and edit payments and invoices.
 - **candidates:read**: View candidates in your organization.
 - **candidates:write**: Create, edit and delete candidates in your organization.
 - **contracts:read**: View contracts in your organization.
 - **contracts:write**: Create and amend contracts.
 - **people:write**: Write worker’s information such as profile, time-off and expense.
 - **people:read**: Read worker’s information such as profile, time-off and expenses.
 - **profile:read**: Read Profile information such as name, email, phone
 - **Users:read**: View information about people in Deel HR.
 - **webhooks:read**: View webhooks in your organization.
 - **webhooks:write**: Create and edit webhooks in your organization.
 - **global-payroll:read**: View global payroll information about your employees.
 - **global-payroll:write**: Write global payroll information about your employees.
 - **adjustments:write**: Create / update adjustments of your employee.
 - **adjustments:read**: View adjustments of your employee.
 - **invoice-adjustments:read**: View invoices of your workforce.
 - **invoice-adjustments:write**: Create, edit, review, and delete invoice adjustments.
 - **milestones:read**: View milestones of your contractors.
 - **milestones:write**: Create, edit, review, and delete milestones.
 - **organizations:read**: View basic information about your organizations, teams, legal entities and agreements.
 - **organizations:write**: Modify information in your organization. Create, edit, delete admin users or managers.
 - **off-cycle-payments:read**: View your off-cycle payments.
 - **off-cycle-payments:write**: Create, edit, review your off-cycle payments.
 - **timesheets:read**: View work submitted for time-based contracts.
 - **timesheets:write**: Create, edit, review, and delete timesheets.
 - **tasks:read**: View your pay-as-you-go tasks.
 - **tasks:write**: Create, edit, review and delete your pay-as-you-go tasks.
 - **payslips:read**: View employee payslips.
 - **payslips:write**: Create, edit, review and delete employee payslips.
 - **public-token:write**: Create, edit, review and delete public tokens.
 - **profile:write**: Write Profile information such as name, email, phone

<a id="public"></a>
### public

- **Type**: OAuth
- **Flow**: accessCode
- **Authorization URL**: 
- **Scopes**: 
 - **contracts:read**: View contracts in your organization.


## Author

apiteam@deel.com


